{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/lib/firebase/server.ts"],"sourcesContent":["// This file is for SERVER-SIDE use only.\n// It initializes the Firebase Admin SDK.\n\nimport { initializeApp, getApp, getApps, type App, cert } from 'firebase-admin/app';\nimport { getAuth as getAdminAuth } from 'firebase-admin/auth';\nimport { getFirestore as getAdminFirestore } from 'firebase-admin/firestore';\n\nconst serviceAccount = {\n  projectId: process.env.FIREBASE_PROJECT_ID,\n  clientEmail: process.env.FIREBASE_CLIENT_EMAIL,\n  privateKey: process.env.FIREBASE_PRIVATE_KEY?.replace(/\\\\n/g, '\\n'), // Important for Vercel/env variables\n};\n\nfunction getAdminApp(): App {\n  // Check if the default app is already initialized\n  if (getApps().some(app => app.name === '[DEFAULT]')) {\n    return getApp();\n  }\n\n  // Check for credentials before initializing to provide a clearer error\n  if (!serviceAccount.projectId || !serviceAccount.clientEmail || !serviceAccount.privateKey) {\n    throw new Error('Firebase Admin credentials are not set in the environment. Please check your .env.local file.');\n  }\n\n  return initializeApp({\n    credential: cert(serviceAccount),\n  });\n}\n\n// Directly export functions that return the initialized services\nexport const getAuth = () => getAdminAuth(getAdminApp());\nexport const getFirestore = () => getAdminFirestore(getAdminApp());\n"],"names":[],"mappings":"AAAA,yCAAyC;AACzC,yCAAyC;;;;;AAEzC;AACA;AACA;;;;AAEA,MAAM,iBAAiB;IACrB,WAAW,QAAQ,GAAG,CAAC,mBAAmB;IAC1C,aAAa,QAAQ,GAAG,CAAC,qBAAqB;IAC9C,YAAY,QAAQ,GAAG,CAAC,oBAAoB,EAAE,QAAQ,QAAQ;AAChE;AAEA,SAAS;IACP,kDAAkD;IAClD,IAAI,CAAA,GAAA,uKAAA,CAAA,UAAO,AAAD,IAAI,IAAI,CAAC,CAAA,MAAO,IAAI,IAAI,KAAK,cAAc;QACnD,OAAO,CAAA,GAAA,uKAAA,CAAA,SAAM,AAAD;IACd;IAEA,uEAAuE;IACvE,IAAI,CAAC,eAAe,SAAS,IAAI,CAAC,eAAe,WAAW,IAAI,CAAC,eAAe,UAAU,EAAE;QAC1F,MAAM,IAAI,MAAM;IAClB;IAEA,OAAO,CAAA,GAAA,uKAAA,CAAA,gBAAa,AAAD,EAAE;QACnB,YAAY,CAAA,GAAA,uKAAA,CAAA,OAAI,AAAD,EAAE;IACnB;AACF;AAGO,MAAM,UAAU,IAAM,CAAA,GAAA,wKAAA,CAAA,UAAY,AAAD,EAAE;AACnC,MAAM,eAAe,IAAM,CAAA,GAAA,6KAAA,CAAA,eAAiB,AAAD,EAAE"}},
    {"offset": {"line": 85, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/backend"],"sourcesContent":["__turbopack_context__.n(__import_unsupported(`path`));\n"],"names":[],"mappings":"AAAA,sBAAsB,CAAC,CAAC,qBAAqB,CAAC,IAAI,CAAC"}},
    {"offset": {"line": 92, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/backend"],"sourcesContent":["__turbopack_context__.n(__import_unsupported(`fs`));\n"],"names":[],"mappings":"AAAA,sBAAsB,CAAC,CAAC,qBAAqB,CAAC,EAAE,CAAC"}},
    {"offset": {"line": 99, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/backend/db.js"],"sourcesContent":["\nimport mysql from 'mysql2/promise';\nimport dotenv from 'dotenv';\nimport path from 'path';\nimport fs from 'fs';\nimport { fileURLToPath } from 'url';\n\n// Get the directory name in ES module scope\nconst __filename = fileURLToPath(import.meta.url);\nconst __dirname = path.dirname(__filename);\n\n// Construct absolute path to .env file in the parent directory\nconst envPath = path.resolve(__dirname, \".env\");\ndotenv.config({ path: envPath });\n\n// Construct absolute path to ca.pem file in the same directory\nconst caPath = path.resolve(__dirname, \"ca.pem\");\nlet caCert;\n\ntry {\n  if (!fs.existsSync(caPath)) {\n    console.error(`CRITICAL_DB_INIT_ERROR: CA certificate file (ca.pem) not found at expected location: ${caPath}. Database connections requiring SSL will likely fail. Please ensure 'backend/ca.pem' exists.`);\n    // caCert will remain undefined. mysql.createPool might fail if SSL is strictly required.\n  } else {\n    caCert = fs.readFileSync(caPath, 'utf8');\n  }\n} catch (e) {\n  console.error(`CRITICAL_DB_INIT_ERROR: Error reading CA certificate file (ca.pem) at ${caPath}: ${e.message}. Database connections may fail.`);\n  // Depending on the error, caCert might be undefined or an error could be thrown, halting further execution.\n  // For robustness, we could choose to throw here to make the failure explicit.\n  // throw new Error(`Failed to read ca.pem: ${e.message}`);\n}\n\n// Check for essential DB environment variables\nconst essentialEnvVars = ['DB_HOST', 'DB_USER', 'DB_PASSWORD', 'DB_NAME'];\nconst missingEnvVars = essentialEnvVars.filter(v => !process.env[v]);\n\nif (missingEnvVars.length > 0) {\n    console.error(`CRITICAL_DB_INIT_ERROR: Missing essential database environment variables: ${missingEnvVars.join(', ')}. These should be defined in backend/.env for local development or configured in your hosting environment. Database connections will fail.`);\n    // To make the server fail fast and clearly, throwing an error here is a good practice.\n    // This prevents a more obscure \"Internal Server Error\" later.\n    throw new Error(`Missing critical DB environment variables: ${missingEnvVars.join(', ')}. Check your backend/.env file or hosting configuration.`);\n}\n\nlet pool;\ntry {\n  pool = mysql.createPool({\n    host: process.env.DB_HOST,\n    user: process.env.DB_USER,\n    password: process.env.DB_PASSWORD,\n    database: process.env.DB_NAME,\n    port: process.env.DB_PORT ? parseInt(process.env.DB_PORT, 10) : 3306,\n    ssl: {\n      ca: caCert, // If caCert is undefined due to file not found, this may cause issues\n      rejectUnauthorized: true, // Recommended for production if using a trusted CA\n    },\n    waitForConnections: true,\n    connectionLimit: 10,\n    queueLimit: 0,\n  });\n  console.log(\"DB_INIT_SUCCESS: MySQL connection pool created (this does not guarantee successful connection yet, but configuration is loaded).\");\n} catch (error) {\n  console.error(`CRITICAL_DB_INIT_ERROR: Failed to create MySQL connection pool: ${error.message}. This is a fatal error for database operations.`);\n  // Re-throwing the error here will make the application fail on startup if the pool cannot be initialized,\n  // which is often better than encountering errors later during request handling.\n  throw new Error(`Failed to initialize database connection pool due to: ${error.message}. Review DB configuration (backend/.env) and SSL certificate (backend/ca.pem).`);\n}\n\n// Export the connection pool\nexport {pool};\n"],"names":[],"mappings":";;;AACA;AACA;AACA;AAEA;;;;;;;;;;;AAEA,4CAA4C;AAC5C,MAAM,aAAa,CAAA,GAAA,0KAAA,CAAA,gBAAa,AAAD,EAAE,8BAAY,GAAG;AAChD,MAAM,YAAY,yGAAA,CAAA,UAAI,CAAC,OAAO,CAAC;AAE/B,+DAA+D;AAC/D,MAAM,UAAU,yGAAA,CAAA,UAAI,CAAC,OAAO,CAAC,WAAW;AACxC,6IAAA,CAAA,UAAM,CAAC,MAAM,CAAC;IAAE,MAAM;AAAQ;AAE9B,+DAA+D;AAC/D,MAAM,SAAS,yGAAA,CAAA,UAAI,CAAC,OAAO,CAAC,WAAW;AACvC,IAAI;AAEJ,IAAI;IACF,IAAI,CAAC,yGAAA,CAAA,UAAE,CAAC,UAAU,CAAC,SAAS;QAC1B,QAAQ,KAAK,CAAC,CAAC,qFAAqF,EAAE,OAAO,6FAA6F,CAAC;IAC3M,yFAAyF;IAC3F,OAAO;QACL,SAAS,yGAAA,CAAA,UAAE,CAAC,YAAY,CAAC,QAAQ;IACnC;AACF,EAAE,OAAO,GAAG;IACV,QAAQ,KAAK,CAAC,CAAC,sEAAsE,EAAE,OAAO,EAAE,EAAE,EAAE,OAAO,CAAC,gCAAgC,CAAC;AAC7I,4GAA4G;AAC5G,8EAA8E;AAC9E,0DAA0D;AAC5D;AAEA,+CAA+C;AAC/C,MAAM,mBAAmB;IAAC;IAAW;IAAW;IAAe;CAAU;AACzE,MAAM,iBAAiB,iBAAiB,MAAM,CAAC,CAAA,IAAK,CAAC,QAAQ,GAAG,CAAC,EAAE;AAEnE,IAAI,eAAe,MAAM,GAAG,GAAG;IAC3B,QAAQ,KAAK,CAAC,CAAC,0EAA0E,EAAE,eAAe,IAAI,CAAC,MAAM,0IAA0I,CAAC;IAChQ,uFAAuF;IACvF,8DAA8D;IAC9D,MAAM,IAAI,MAAM,CAAC,2CAA2C,EAAE,eAAe,IAAI,CAAC,MAAM,wDAAwD,CAAC;AACrJ;AAEA,IAAI;AACJ,IAAI;IACF,OAAO,yIAAA,CAAA,UAAK,CAAC,UAAU,CAAC;QACtB,MAAM,QAAQ,GAAG,CAAC,OAAO;QACzB,MAAM,QAAQ,GAAG,CAAC,OAAO;QACzB,UAAU,QAAQ,GAAG,CAAC,WAAW;QACjC,UAAU,QAAQ,GAAG,CAAC,OAAO;QAC7B,MAAM,QAAQ,GAAG,CAAC,OAAO,GAAG,SAAS,QAAQ,GAAG,CAAC,OAAO,EAAE,MAAM;QAChE,KAAK;YACH,IAAI;YACJ,oBAAoB;QACtB;QACA,oBAAoB;QACpB,iBAAiB;QACjB,YAAY;IACd;IACA,QAAQ,GAAG,CAAC;AACd,EAAE,OAAO,OAAO;IACd,QAAQ,KAAK,CAAC,CAAC,gEAAgE,EAAE,MAAM,OAAO,CAAC,gDAAgD,CAAC;IAChJ,0GAA0G;IAC1G,gFAAgF;IAChF,MAAM,IAAI,MAAM,CAAC,sDAAsD,EAAE,MAAM,OAAO,CAAC,8EAA8E,CAAC;AACxK"}},
    {"offset": {"line": 184, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/middleware.ts"],"sourcesContent":["import { NextResponse, type NextRequest } from 'next/server';\nimport { cookies } from 'next/headers';\nimport { getAuth } from '@/lib/firebase/server';\nimport { pool } from './backend/db.js';\n\nconst PROTECTED_ROUTES = ['/', '/create-document', '/approvals', '/activity-log', '/analytics', '/reports', '/management'];\nconst AUTH_ROUTE = '/auth';\n\nexport async function middleware(request: NextRequest) {\n  const { pathname } = request.nextUrl;\n\n  // Skip middleware for static files, API routes, and Next.js internals\n  if (\n    pathname.startsWith('/_next/') ||\n    pathname.startsWith('/api/') ||\n    pathname.startsWith('/static/') ||\n    ['/favicon.ico', '/jachris-logo.png', '/headerlogo.png'].includes(pathname)\n  ) {\n    return NextResponse.next();\n  }\n\n  const sessionCookie = cookies().get(process.env.SESSION_COOKIE_NAME!)?.value;\n\n  // Redirect to auth page if trying to access a protected route without a session\n  if (!sessionCookie && PROTECTED_ROUTES.some(p => pathname.startsWith(p))) {\n    const url = request.nextUrl.clone();\n    url.pathname = AUTH_ROUTE;\n    return NextResponse.redirect(url);\n  }\n\n  try {\n    if (sessionCookie) {\n      // 1. Verify the Firebase session cookie. If invalid, it will throw an error.\n      const decodedToken = await getAuth().verifySessionCookie(sessionCookie, true);\n      \n      // 2. Check if the user exists and is active in the application's database.\n      if (!decodedToken.email) {\n          throw new Error('No email found in Firebase token.');\n      }\n      \n      const [userRows]: any[] = await pool.execute(\n          'SELECT id, role, isActive FROM User WHERE email = ?',\n          [decodedToken.email]\n      );\n      \n      if (userRows.length === 0) {\n          throw new Error(`User with email ${decodedToken.email} not found in application database.`);\n      }\n      \n      const appUser = userRows[0];\n      if (!appUser.isActive) {\n          throw new Error(`User ${decodedToken.email} is inactive.`);\n      }\n\n      // If checks pass, user is valid.\n\n      // If authenticated user tries to access the auth page, redirect to home\n      if (pathname === AUTH_ROUTE) {\n        return NextResponse.redirect(new URL('/', request.url));\n      }\n    }\n  } catch (error: any) {\n    // Catches errors from verifySessionCookie and our custom authorization checks.\n    console.error('Middleware auth error:', error.message);\n    // Session cookie is invalid or user not authorized. Clear it and redirect to auth page.\n    const response = NextResponse.redirect(new URL(AUTH_ROUTE, request.url));\n    response.cookies.set(process.env.SESSION_COOKIE_NAME!, '', { maxAge: -1 });\n    return response;\n  }\n\n  return NextResponse.next();\n}\n\nexport const config = {\n  matcher: [\n    /*\n     * Match all request paths except for the ones starting with:\n     * - api (API routes)\n     * - _next/static (static files)\n     * - _next/image (image optimization files)\n     * - favicon.ico (favicon file)\n     */\n    '/((?!api|_next/static|_next/image|favicon.ico).*)',\n  ],\n};\n"],"names":[],"mappings":";;;;AAAA;AAAA;AACA;AAAA;AACA;AACA;;;;;AAEA,MAAM,mBAAmB;IAAC;IAAK;IAAoB;IAAc;IAAiB;IAAc;IAAY;CAAc;AAC1H,MAAM,aAAa;AAEZ,eAAe,WAAW,OAAoB;IACnD,MAAM,EAAE,QAAQ,EAAE,GAAG,QAAQ,OAAO;IAEpC,sEAAsE;IACtE,IACE,SAAS,UAAU,CAAC,cACpB,SAAS,UAAU,CAAC,YACpB,SAAS,UAAU,CAAC,eACpB;QAAC;QAAgB;QAAqB;KAAkB,CAAC,QAAQ,CAAC,WAClE;QACA,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;IAC1B;IAEA,MAAM,gBAAgB,CAAA,GAAA,2KAAA,CAAA,UAAO,AAAD,IAAI,GAAG,CAAC,QAAQ,GAAG,CAAC,mBAAmB,GAAI;IAEvE,gFAAgF;IAChF,IAAI,CAAC,iBAAiB,iBAAiB,IAAI,CAAC,CAAA,IAAK,SAAS,UAAU,CAAC,KAAK;QACxE,MAAM,MAAM,QAAQ,OAAO,CAAC,KAAK;QACjC,IAAI,QAAQ,GAAG;QACf,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC;IAC/B;IAEA,IAAI;QACF,IAAI,eAAe;YACjB,6EAA6E;YAC7E,MAAM,eAAe,MAAM,CAAA,GAAA,wIAAA,CAAA,UAAO,AAAD,IAAI,mBAAmB,CAAC,eAAe;YAExE,2EAA2E;YAC3E,IAAI,CAAC,aAAa,KAAK,EAAE;gBACrB,MAAM,IAAI,MAAM;YACpB;YAEA,MAAM,CAAC,SAAS,GAAU,MAAM,qHAAA,CAAA,OAAI,CAAC,OAAO,CACxC,uDACA;gBAAC,aAAa,KAAK;aAAC;YAGxB,IAAI,SAAS,MAAM,KAAK,GAAG;gBACvB,MAAM,IAAI,MAAM,CAAC,gBAAgB,EAAE,aAAa,KAAK,CAAC,mCAAmC,CAAC;YAC9F;YAEA,MAAM,UAAU,QAAQ,CAAC,EAAE;YAC3B,IAAI,CAAC,QAAQ,QAAQ,EAAE;gBACnB,MAAM,IAAI,MAAM,CAAC,KAAK,EAAE,aAAa,KAAK,CAAC,aAAa,CAAC;YAC7D;YAEA,iCAAiC;YAEjC,wEAAwE;YACxE,IAAI,aAAa,YAAY;gBAC3B,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,KAAK,QAAQ,GAAG;YACvD;QACF;IACF,EAAE,OAAO,OAAY;QACnB,+EAA+E;QAC/E,QAAQ,KAAK,CAAC,0BAA0B,MAAM,OAAO;QACrD,wFAAwF;QACxF,MAAM,WAAW,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,YAAY,QAAQ,GAAG;QACtE,SAAS,OAAO,CAAC,GAAG,CAAC,QAAQ,GAAG,CAAC,mBAAmB,EAAG,IAAI;YAAE,QAAQ,CAAC;QAAE;QACxE,OAAO;IACT;IAEA,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;AAC1B;AAEO,MAAM,SAAS;IACpB,SAAS;QACP;;;;;;KAMC,GACD;KACD;AACH"}}]
}