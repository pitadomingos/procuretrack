{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 62, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/api/charts/site-po-value-status/route.ts"],"sourcesContent":["\nimport { NextResponse } from 'next/server';\nimport type { ChartDataPoint, PurchaseOrderStatus } from '@/types';\n\ninterface SitePOValueQueryResult {\n  site_identifier: string; \n  status: PurchaseOrderStatus; \n  total_value: number | string; \n  po_id: number; \n}\n\nexport async function GET(request: Request) {\n  const { searchParams } = new URL(request.url);\n  const month = searchParams.get('month');\n  const year = searchParams.get('year');\n  \n  let connection;\n  try {\n    const { pool } = await import('../../../../../backend/db.js');\n    connection = await pool.getConnection();\n    \n    let poWhereClauses: string[] = [\"po.status IN ('Pending Approval', 'Approved')\"];\n    const queryParams: (string | number)[] = [];\n\n    if (month && month !== 'all') {\n      poWhereClauses.push(\"MONTH(po.creationDate) = ?\");\n      queryParams.push(parseInt(month, 10));\n    }\n    if (year && year !== 'all') {\n      poWhereClauses.push(\"YEAR(po.creationDate) = ?\");\n      queryParams.push(parseInt(year, 10));\n    }\n    \n    const poWhereString = poWhereClauses.length > 0 ? `WHERE ${poWhereClauses.join(' AND ')}` : '';\n    \n    const poQuery = `\n      SELECT \n        po.id as po_id,\n        COALESCE(s.siteCode, s.name, 'Unassigned') as site_identifier,\n        po.status,\n        po.grandTotal as total_value\n      FROM PurchaseOrder po\n      LEFT JOIN POItem poi ON po.id = poi.poId \n      LEFT JOIN Site s ON poi.siteId = s.id \n      ${poWhereString}\n      GROUP BY po.id, site_identifier, po.status, po.grandTotal \n      ORDER BY site_identifier ASC, po.status ASC;\n    `;\n    const [poRows]: any[] = await connection.execute(poQuery, queryParams);\n\n    const siteData: { [key: string]: ChartDataPoint } = {};\n    const siteOrder: string[] = [];\n\n    for (const po of poRows as Array<Omit<SitePOValueQueryResult, 'total_value'> & {total_value: number | string | null}>) {\n      const siteIdentifier = po.site_identifier;\n      if (!siteData[siteIdentifier]) {\n        siteData[siteIdentifier] = { \n          name: siteIdentifier,\n          'ApprovedValue': 0,      \n          'PendingApprovalValue': 0    \n        };\n        if (!siteOrder.includes(siteIdentifier)) {\n          siteOrder.push(siteIdentifier);\n        }\n      }\n\n      const poValue = Number(po.total_value) || 0;\n      const currentStatus = po.status ? po.status.trim() as PurchaseOrderStatus : 'Draft';\n\n      if (currentStatus === 'Pending Approval') {\n        siteData[siteIdentifier]['PendingApprovalValue'] = (siteData[siteIdentifier]['PendingApprovalValue'] as number) + poValue;\n      } else if (currentStatus === 'Approved') {\n         siteData[siteIdentifier]['ApprovedValue'] = (siteData[siteIdentifier]['ApprovedValue'] as number) + poValue;\n      }\n    }\n    \n    siteOrder.sort();\n    const chartData = siteOrder.map(siteIdentifier => siteData[siteIdentifier]);\n\n    return NextResponse.json(chartData);\n\n  } catch (error: any) {\n    console.error('Error fetching site PO value status data:', error);\n    return NextResponse.json(\n      { error: 'Failed to fetch site PO value status data', details: error.message },\n      { status: 500 }\n    );\n  } finally {\n    if (connection) connection.release();\n  }\n}\n"],"names":[],"mappings":";;;AACA;;AAUO,eAAe,IAAI,OAAgB;IACxC,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,QAAQ,GAAG;IAC5C,MAAM,QAAQ,aAAa,GAAG,CAAC;IAC/B,MAAM,OAAO,aAAa,GAAG,CAAC;IAE9B,IAAI;IACJ,IAAI;QACF,MAAM,EAAE,IAAI,EAAE,GAAG;QACjB,aAAa,MAAM,KAAK,aAAa;QAErC,IAAI,iBAA2B;YAAC;SAAgD;QAChF,MAAM,cAAmC,EAAE;QAE3C,IAAI,SAAS,UAAU,OAAO;YAC5B,eAAe,IAAI,CAAC;YACpB,YAAY,IAAI,CAAC,SAAS,OAAO;QACnC;QACA,IAAI,QAAQ,SAAS,OAAO;YAC1B,eAAe,IAAI,CAAC;YACpB,YAAY,IAAI,CAAC,SAAS,MAAM;QAClC;QAEA,MAAM,gBAAgB,eAAe,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE,eAAe,IAAI,CAAC,UAAU,GAAG;QAE5F,MAAM,UAAU,CAAC;;;;;;;;;MASf,EAAE,cAAc;;;IAGlB,CAAC;QACD,MAAM,CAAC,OAAO,GAAU,MAAM,WAAW,OAAO,CAAC,SAAS;QAE1D,MAAM,WAA8C,CAAC;QACrD,MAAM,YAAsB,EAAE;QAE9B,KAAK,MAAM,MAAM,OAAsG;YACrH,MAAM,iBAAiB,GAAG,eAAe;YACzC,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE;gBAC7B,QAAQ,CAAC,eAAe,GAAG;oBACzB,MAAM;oBACN,iBAAiB;oBACjB,wBAAwB;gBAC1B;gBACA,IAAI,CAAC,UAAU,QAAQ,CAAC,iBAAiB;oBACvC,UAAU,IAAI,CAAC;gBACjB;YACF;YAEA,MAAM,UAAU,OAAO,GAAG,WAAW,KAAK;YAC1C,MAAM,gBAAgB,GAAG,MAAM,GAAG,GAAG,MAAM,CAAC,IAAI,KAA4B;YAE5E,IAAI,kBAAkB,oBAAoB;gBACxC,QAAQ,CAAC,eAAe,CAAC,uBAAuB,GAAG,AAAC,QAAQ,CAAC,eAAe,CAAC,uBAAuB,GAAc;YACpH,OAAO,IAAI,kBAAkB,YAAY;gBACtC,QAAQ,CAAC,eAAe,CAAC,gBAAgB,GAAG,AAAC,QAAQ,CAAC,eAAe,CAAC,gBAAgB,GAAc;YACvG;QACF;QAEA,UAAU,IAAI;QACd,MAAM,YAAY,UAAU,GAAG,CAAC,CAAA,iBAAkB,QAAQ,CAAC,eAAe;QAE1E,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAE3B,EAAE,OAAO,OAAY;QACnB,QAAQ,KAAK,CAAC,6CAA6C;QAC3D,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;YAA6C,SAAS,MAAM,OAAO;QAAC,GAC7E;YAAE,QAAQ;QAAI;IAElB,SAAU;QACR,IAAI,YAAY,WAAW,OAAO;IACpC;AACF","debugId":null}}]
}