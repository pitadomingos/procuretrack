{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 182, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/backend/db.js"],"sourcesContent":["\nimport mysql from 'mysql2/promise';\nimport fs from 'fs';\nimport path from 'path';\nimport dotenv from 'dotenv';\n\n// Configure dotenv to load the .env file from the backend directory\ndotenv.config({ path: path.resolve(process.cwd(), 'backend', '.env') });\n\nlet pool = null;\n\nasync function getDbPool() {\n  if (pool) {\n    return pool;\n  }\n\n  // --- Debugging Environment ---\n  console.log('[DB_INIT] Current working directory:', process.cwd());\n  console.log('[DB_INIT] Checking for environment variables...');\n  \n  try {\n    // Check for essential DB environment variables\n    const essentialEnvVars = ['DB_HOST', 'DB_USER', 'DB_PASSWORD', 'DB_NAME'];\n    const missingEnvVars = [];\n    for (const v of essentialEnvVars) {\n        if (!process.env[v]) {\n            missingEnvVars.push(v);\n        } else {\n            // Avoid logging password in production\n            if (v !== 'DB_PASSWORD') {\n                console.log(`[DB_INIT] Found ENV VAR: ${v} = ${process.env[v]}`);\n            } else {\n                 console.log(`[DB_INIT] Found ENV VAR: DB_PASSWORD = (hidden)`);\n            }\n        }\n    }\n    \n    if (missingEnvVars.length > 0) {\n      const errorMsg = `Database configuration is incomplete. Missing variables: ${missingEnvVars.join(', ')}. Please define these in your root .env file.`;\n      console.error(`[DB_INIT_ERROR] ${errorMsg}`);\n      throw new Error(errorMsg);\n    }\n\n    // --- SSL Certificate Handling ---\n    const caCertPathOrContent = process.env.DB_SSL_CA;\n    let caCertContent;\n\n    if (caCertPathOrContent) {\n      const potentialPath = path.resolve(process.cwd(), caCertPathOrContent);\n      \n      if (fs.existsSync(potentialPath) && fs.statSync(potentialPath).isFile()) {\n        console.log(`DB_INIT_INFO: DB_SSL_CA points to a file. Reading certificate from \"${potentialPath}\".`);\n        caCertContent = fs.readFileSync(potentialPath, 'utf8');\n      } else {\n        console.log(\"DB_INIT_INFO: DB_SSL_CA does not appear to be a file path. Using its content directly for SSL connection.\");\n        caCertContent = caCertPathOrContent;\n      }\n    } else {\n      console.warn(`DB_WARN: The DB_SSL_CA environment variable is not set. Connecting with SSL using system default CAs. If connection fails, please provide the path to your 'ca.pem' file in the DB_SSL_CA variable in your .env file.`);\n    }\n    \n    const sslConfig = { rejectUnauthorized: true, ca: caCertContent || undefined };\n\n    // --- Connection Pool Creation ---\n    console.log(\"DB_INIT_INFO: Creating database connection pool for the first time.\");\n    const newPool = mysql.createPool({\n      host: process.env.DB_HOST,\n      user: process.env.DB_USER,\n      password: process.env.DB_PASSWORD,\n      database: process.env.DB_NAME,\n      port: process.env.DB_PORT ? parseInt(process.env.DB_PORT, 10) : 3306,\n      ssl: sslConfig,\n      waitForConnections: true,\n      connectionLimit: 10,\n      queueLimit: 0,\n    });\n\n    try {\n      // Test the connection before assigning it to the singleton\n      const connection = await newPool.getConnection();\n      console.log(\"DB_INIT_SUCCESS: Database connection pool created and verified successfully.\");\n      connection.release();\n    } catch (testError) {\n      console.error(\"CRITICAL_DB_INIT_ERROR: Failed to get a connection from the pool after creation.\", testError);\n      // Destroy the pool if the initial connection test fails\n      newPool.end();\n      throw testError; // Re-throw to be caught by the main catch block\n    }\n\n    pool = newPool;\n    return pool;\n\n  } catch (error) {\n    console.error(`CRITICAL_DB_INIT_ERROR: Failed to create and verify database connection pool. Error: ${error.message}`);\n    // Re-throw the error to be caught by the calling API route\n    throw error;\n  }\n}\n\n// Export the function that provides the pool\nexport { getDbPool };\n"],"names":[],"mappings":";;;AACA;AACA;AACA;AACA;;;;;AAEA,oEAAoE;AACpE,uIAAA,CAAA,UAAM,CAAC,MAAM,CAAC;IAAE,MAAM,iGAAA,CAAA,UAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,IAAI,WAAW;AAAQ;AAErE,IAAI,OAAO;AAEX,eAAe;IACb,IAAI,MAAM;QACR,OAAO;IACT;IAEA,gCAAgC;IAChC,QAAQ,GAAG,CAAC,wCAAwC,QAAQ,GAAG;IAC/D,QAAQ,GAAG,CAAC;IAEZ,IAAI;QACF,+CAA+C;QAC/C,MAAM,mBAAmB;YAAC;YAAW;YAAW;YAAe;SAAU;QACzE,MAAM,iBAAiB,EAAE;QACzB,KAAK,MAAM,KAAK,iBAAkB;YAC9B,IAAI,CAAC,QAAQ,GAAG,CAAC,EAAE,EAAE;gBACjB,eAAe,IAAI,CAAC;YACxB,OAAO;gBACH,uCAAuC;gBACvC,IAAI,MAAM,eAAe;oBACrB,QAAQ,GAAG,CAAC,CAAC,yBAAyB,EAAE,EAAE,GAAG,EAAE,QAAQ,GAAG,CAAC,EAAE,EAAE;gBACnE,OAAO;oBACF,QAAQ,GAAG,CAAC,CAAC,+CAA+C,CAAC;gBAClE;YACJ;QACJ;QAEA,IAAI,eAAe,MAAM,GAAG,GAAG;YAC7B,MAAM,WAAW,CAAC,yDAAyD,EAAE,eAAe,IAAI,CAAC,MAAM,6CAA6C,CAAC;YACrJ,QAAQ,KAAK,CAAC,CAAC,gBAAgB,EAAE,UAAU;YAC3C,MAAM,IAAI,MAAM;QAClB;QAEA,mCAAmC;QACnC,MAAM,sBAAsB,QAAQ,GAAG,CAAC,SAAS;QACjD,IAAI;QAEJ,IAAI,qBAAqB;YACvB,MAAM,gBAAgB,iGAAA,CAAA,UAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,IAAI;YAElD,IAAI,6FAAA,CAAA,UAAE,CAAC,UAAU,CAAC,kBAAkB,6FAAA,CAAA,UAAE,CAAC,QAAQ,CAAC,eAAe,MAAM,IAAI;gBACvE,QAAQ,GAAG,CAAC,CAAC,oEAAoE,EAAE,cAAc,EAAE,CAAC;gBACpG,gBAAgB,6FAAA,CAAA,UAAE,CAAC,YAAY,CAAC,eAAe;YACjD,OAAO;gBACL,QAAQ,GAAG,CAAC;gBACZ,gBAAgB;YAClB;QACF,OAAO;YACL,QAAQ,IAAI,CAAC,CAAC,qNAAqN,CAAC;QACtO;QAEA,MAAM,YAAY;YAAE,oBAAoB;YAAM,IAAI,iBAAiB;QAAU;QAE7E,mCAAmC;QACnC,QAAQ,GAAG,CAAC;QACZ,MAAM,UAAU,mIAAA,CAAA,UAAK,CAAC,UAAU,CAAC;YAC/B,MAAM,QAAQ,GAAG,CAAC,OAAO;YACzB,MAAM,QAAQ,GAAG,CAAC,OAAO;YACzB,UAAU,QAAQ,GAAG,CAAC,WAAW;YACjC,UAAU,QAAQ,GAAG,CAAC,OAAO;YAC7B,MAAM,QAAQ,GAAG,CAAC,OAAO,GAAG,SAAS,QAAQ,GAAG,CAAC,OAAO,EAAE,MAAM;YAChE,KAAK;YACL,oBAAoB;YACpB,iBAAiB;YACjB,YAAY;QACd;QAEA,IAAI;YACF,2DAA2D;YAC3D,MAAM,aAAa,MAAM,QAAQ,aAAa;YAC9C,QAAQ,GAAG,CAAC;YACZ,WAAW,OAAO;QACpB,EAAE,OAAO,WAAW;YAClB,QAAQ,KAAK,CAAC,oFAAoF;YAClG,wDAAwD;YACxD,QAAQ,GAAG;YACX,MAAM,WAAW,gDAAgD;QACnE;QAEA,OAAO;QACP,OAAO;IAET,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,CAAC,qFAAqF,EAAE,MAAM,OAAO,EAAE;QACrH,2DAA2D;QAC3D,MAAM;IACR;AACF","debugId":null}},
    {"offset": {"line": 289, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/api/charts/monthly-po-status/route.ts"],"sourcesContent":["\nimport { NextResponse } from 'next/server';\nimport type { ChartDataPoint } from '@/types';\nimport { getDbPool } from '../../../../../backend/db.js';\n\ninterface MonthlyPOQueryResult {\n  month_year: string; \n  status: string;\n  count: number | string; \n}\n\nexport async function GET(request: Request) {\n  const { searchParams } = new URL(request.url);\n  const month = searchParams.get('month');\n  const year = searchParams.get('year');\n\n  let connection;\n  try {\n    const pool = await getDbPool();\n    connection = await pool.getConnection();\n    \n    let whereClauses: string[] = [];\n    const queryParams: (string | number)[] = [];\n\n    if (month && month !== 'all') {\n      whereClauses.push(\"MONTH(creationDate) = ?\");\n      queryParams.push(parseInt(month, 10));\n    }\n    if (year && year !== 'all') {\n      whereClauses.push(\"YEAR(creationDate) = ?\");\n      queryParams.push(parseInt(year, 10));\n    }\n    \n    whereClauses.push(\"status IN ('Pending Approval', 'Approved')\");\n\n    const whereString = whereClauses.length > 0 ? `WHERE ${whereClauses.join(' AND ')}` : '';\n\n    const query = `\n      SELECT \n        DATE_FORMAT(creationDate, '%Y-%m') as month_year,\n        status,\n        COUNT(*) as count\n      FROM PurchaseOrder\n      ${whereString}\n      GROUP BY month_year, status\n      ORDER BY month_year ASC, status ASC;\n    `;\n\n    const [rows]: any[] = await connection.execute(query, queryParams);\n\n    const monthlyData: { [key: string]: ChartDataPoint } = {};\n    const monthOrder: string[] = [];\n\n    rows.forEach((row: MonthlyPOQueryResult) => {\n      const monthYear = row.month_year;\n      if (!monthlyData[monthYear]) {\n        const [y, mNum] = monthYear.split('-');\n        const date = new Date(Number(y), Number(mNum) - 1);\n        const displayMonth = date.toLocaleString('default', { month: 'short' });\n        \n        monthlyData[monthYear] = { \n          name: `${displayMonth} ${y}`, \n          'Approved': 0,      \n          'Pending Approval': 0   \n        };\n        if (!monthOrder.includes(monthYear)) {\n          monthOrder.push(monthYear);\n        }\n      }\n\n      const count = Number(row.count);\n      if (row.status === 'Approved') { \n        monthlyData[monthYear]['Approved'] = (monthlyData[monthYear]['Approved'] as number) + count;\n      } else if (row.status === 'Pending Approval') {\n        monthlyData[monthYear]['Pending Approval'] = (monthlyData[monthYear]['Pending Approval'] as number) + count;\n      }\n    });\n    \n    monthOrder.sort((a, b) => new Date(a).getTime() - new Date(b).getTime());\n    const chartData = monthOrder.map(monthYear => monthlyData[monthYear]);\n\n    return NextResponse.json(chartData);\n\n  } catch (error: any) {\n    console.error('Error fetching monthly PO status data:', error);\n    return NextResponse.json(\n      { error: 'Failed to fetch monthly PO status data', details: error.message },\n      { status: 500 }\n    );\n  } finally {\n    if (connection) connection.release();\n  }\n}\n"],"names":[],"mappings":";;;AACA;AAEA;;;AAQO,eAAe,IAAI,OAAgB;IACxC,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,QAAQ,GAAG;IAC5C,MAAM,QAAQ,aAAa,GAAG,CAAC;IAC/B,MAAM,OAAO,aAAa,GAAG,CAAC;IAE9B,IAAI;IACJ,IAAI;QACF,MAAM,OAAO,MAAM,CAAA,GAAA,+GAAA,CAAA,YAAS,AAAD;QAC3B,aAAa,MAAM,KAAK,aAAa;QAErC,IAAI,eAAyB,EAAE;QAC/B,MAAM,cAAmC,EAAE;QAE3C,IAAI,SAAS,UAAU,OAAO;YAC5B,aAAa,IAAI,CAAC;YAClB,YAAY,IAAI,CAAC,SAAS,OAAO;QACnC;QACA,IAAI,QAAQ,SAAS,OAAO;YAC1B,aAAa,IAAI,CAAC;YAClB,YAAY,IAAI,CAAC,SAAS,MAAM;QAClC;QAEA,aAAa,IAAI,CAAC;QAElB,MAAM,cAAc,aAAa,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE,aAAa,IAAI,CAAC,UAAU,GAAG;QAEtF,MAAM,QAAQ,CAAC;;;;;;MAMb,EAAE,YAAY;;;IAGhB,CAAC;QAED,MAAM,CAAC,KAAK,GAAU,MAAM,WAAW,OAAO,CAAC,OAAO;QAEtD,MAAM,cAAiD,CAAC;QACxD,MAAM,aAAuB,EAAE;QAE/B,KAAK,OAAO,CAAC,CAAC;YACZ,MAAM,YAAY,IAAI,UAAU;YAChC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE;gBAC3B,MAAM,CAAC,GAAG,KAAK,GAAG,UAAU,KAAK,CAAC;gBAClC,MAAM,OAAO,IAAI,KAAK,OAAO,IAAI,OAAO,QAAQ;gBAChD,MAAM,eAAe,KAAK,cAAc,CAAC,WAAW;oBAAE,OAAO;gBAAQ;gBAErE,WAAW,CAAC,UAAU,GAAG;oBACvB,MAAM,GAAG,aAAa,CAAC,EAAE,GAAG;oBAC5B,YAAY;oBACZ,oBAAoB;gBACtB;gBACA,IAAI,CAAC,WAAW,QAAQ,CAAC,YAAY;oBACnC,WAAW,IAAI,CAAC;gBAClB;YACF;YAEA,MAAM,QAAQ,OAAO,IAAI,KAAK;YAC9B,IAAI,IAAI,MAAM,KAAK,YAAY;gBAC7B,WAAW,CAAC,UAAU,CAAC,WAAW,GAAG,AAAC,WAAW,CAAC,UAAU,CAAC,WAAW,GAAc;YACxF,OAAO,IAAI,IAAI,MAAM,KAAK,oBAAoB;gBAC5C,WAAW,CAAC,UAAU,CAAC,mBAAmB,GAAG,AAAC,WAAW,CAAC,UAAU,CAAC,mBAAmB,GAAc;YACxG;QACF;QAEA,WAAW,IAAI,CAAC,CAAC,GAAG,IAAM,IAAI,KAAK,GAAG,OAAO,KAAK,IAAI,KAAK,GAAG,OAAO;QACrE,MAAM,YAAY,WAAW,GAAG,CAAC,CAAA,YAAa,WAAW,CAAC,UAAU;QAEpE,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAE3B,EAAE,OAAO,OAAY;QACnB,QAAQ,KAAK,CAAC,0CAA0C;QACxD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;YAA0C,SAAS,MAAM,OAAO;QAAC,GAC1E;YAAE,QAAQ;QAAI;IAElB,SAAU;QACR,IAAI,YAAY,WAAW,OAAO;IACpC;AACF","debugId":null}}]
}