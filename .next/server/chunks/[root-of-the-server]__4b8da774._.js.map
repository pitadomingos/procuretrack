{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 62, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/api/charts/monthly-po-status/route.ts"],"sourcesContent":["\nimport { NextResponse } from 'next/server';\nimport type { ChartDataPoint } from '@/types';\n\ninterface MonthlyPOQueryResult {\n  month_year: string; \n  status: string;\n  count: number | string; \n}\n\nexport async function GET(request: Request) {\n  const { searchParams } = new URL(request.url);\n  const month = searchParams.get('month');\n  const year = searchParams.get('year');\n\n  let connection;\n  try {\n    const { pool } = await import('../../../../../backend/db.js');\n    connection = await pool.getConnection();\n    \n    let whereClauses: string[] = [];\n    const queryParams: (string | number)[] = [];\n\n    if (month && month !== 'all') {\n      whereClauses.push(\"MONTH(creationDate) = ?\");\n      queryParams.push(parseInt(month, 10));\n    }\n    if (year && year !== 'all') {\n      whereClauses.push(\"YEAR(creationDate) = ?\");\n      queryParams.push(parseInt(year, 10));\n    }\n    \n    whereClauses.push(\"status IN ('Pending Approval', 'Approved')\");\n\n    const whereString = whereClauses.length > 0 ? `WHERE ${whereClauses.join(' AND ')}` : '';\n\n    const query = `\n      SELECT \n        DATE_FORMAT(creationDate, '%Y-%m') as month_year,\n        status,\n        COUNT(*) as count\n      FROM PurchaseOrder\n      ${whereString}\n      GROUP BY month_year, status\n      ORDER BY month_year ASC, status ASC;\n    `;\n\n    const [rows]: any[] = await connection.execute(query, queryParams);\n\n    const monthlyData: { [key: string]: ChartDataPoint } = {};\n    const monthOrder: string[] = [];\n\n    rows.forEach((row: MonthlyPOQueryResult) => {\n      const monthYear = row.month_year;\n      if (!monthlyData[monthYear]) {\n        const [y, mNum] = monthYear.split('-');\n        const date = new Date(Number(y), Number(mNum) - 1);\n        const displayMonth = date.toLocaleString('default', { month: 'short' });\n        \n        monthlyData[monthYear] = { \n          name: `${displayMonth} ${y}`, \n          'Approved': 0,      \n          'Pending Approval': 0   \n        };\n        if (!monthOrder.includes(monthYear)) {\n          monthOrder.push(monthYear);\n        }\n      }\n\n      const count = Number(row.count);\n      if (row.status === 'Approved') { \n        monthlyData[monthYear]['Approved'] = (monthlyData[monthYear]['Approved'] as number) + count;\n      } else if (row.status === 'Pending Approval') {\n        monthlyData[monthYear]['Pending Approval'] = (monthlyData[monthYear]['Pending Approval'] as number) + count;\n      }\n    });\n    \n    monthOrder.sort((a, b) => new Date(a).getTime() - new Date(b).getTime());\n    const chartData = monthOrder.map(monthYear => monthlyData[monthYear]);\n\n    return NextResponse.json(chartData);\n\n  } catch (error: any) {\n    console.error('Error fetching monthly PO status data:', error);\n    return NextResponse.json(\n      { error: 'Failed to fetch monthly PO status data', details: error.message },\n      { status: 500 }\n    );\n  } finally {\n    if (connection) connection.release();\n  }\n}\n"],"names":[],"mappings":";;;AACA;;AASO,eAAe,IAAI,OAAgB;IACxC,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,QAAQ,GAAG;IAC5C,MAAM,QAAQ,aAAa,GAAG,CAAC;IAC/B,MAAM,OAAO,aAAa,GAAG,CAAC;IAE9B,IAAI;IACJ,IAAI;QACF,MAAM,EAAE,IAAI,EAAE,GAAG;QACjB,aAAa,MAAM,KAAK,aAAa;QAErC,IAAI,eAAyB,EAAE;QAC/B,MAAM,cAAmC,EAAE;QAE3C,IAAI,SAAS,UAAU,OAAO;YAC5B,aAAa,IAAI,CAAC;YAClB,YAAY,IAAI,CAAC,SAAS,OAAO;QACnC;QACA,IAAI,QAAQ,SAAS,OAAO;YAC1B,aAAa,IAAI,CAAC;YAClB,YAAY,IAAI,CAAC,SAAS,MAAM;QAClC;QAEA,aAAa,IAAI,CAAC;QAElB,MAAM,cAAc,aAAa,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE,aAAa,IAAI,CAAC,UAAU,GAAG;QAEtF,MAAM,QAAQ,CAAC;;;;;;MAMb,EAAE,YAAY;;;IAGhB,CAAC;QAED,MAAM,CAAC,KAAK,GAAU,MAAM,WAAW,OAAO,CAAC,OAAO;QAEtD,MAAM,cAAiD,CAAC;QACxD,MAAM,aAAuB,EAAE;QAE/B,KAAK,OAAO,CAAC,CAAC;YACZ,MAAM,YAAY,IAAI,UAAU;YAChC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE;gBAC3B,MAAM,CAAC,GAAG,KAAK,GAAG,UAAU,KAAK,CAAC;gBAClC,MAAM,OAAO,IAAI,KAAK,OAAO,IAAI,OAAO,QAAQ;gBAChD,MAAM,eAAe,KAAK,cAAc,CAAC,WAAW;oBAAE,OAAO;gBAAQ;gBAErE,WAAW,CAAC,UAAU,GAAG;oBACvB,MAAM,GAAG,aAAa,CAAC,EAAE,GAAG;oBAC5B,YAAY;oBACZ,oBAAoB;gBACtB;gBACA,IAAI,CAAC,WAAW,QAAQ,CAAC,YAAY;oBACnC,WAAW,IAAI,CAAC;gBAClB;YACF;YAEA,MAAM,QAAQ,OAAO,IAAI,KAAK;YAC9B,IAAI,IAAI,MAAM,KAAK,YAAY;gBAC7B,WAAW,CAAC,UAAU,CAAC,WAAW,GAAG,AAAC,WAAW,CAAC,UAAU,CAAC,WAAW,GAAc;YACxF,OAAO,IAAI,IAAI,MAAM,KAAK,oBAAoB;gBAC5C,WAAW,CAAC,UAAU,CAAC,mBAAmB,GAAG,AAAC,WAAW,CAAC,UAAU,CAAC,mBAAmB,GAAc;YACxG;QACF;QAEA,WAAW,IAAI,CAAC,CAAC,GAAG,IAAM,IAAI,KAAK,GAAG,OAAO,KAAK,IAAI,KAAK,GAAG,OAAO;QACrE,MAAM,YAAY,WAAW,GAAG,CAAC,CAAA,YAAa,WAAW,CAAC,UAAU;QAEpE,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAE3B,EAAE,OAAO,OAAY;QACnB,QAAQ,KAAK,CAAC,0CAA0C;QACxD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;YAA0C,SAAS,MAAM,OAAO;QAAC,GAC1E;YAAE,QAAQ;QAAI;IAElB,SAAU;QACR,IAAI,YAAY,WAAW,OAAO;IACpC;AACF","debugId":null}}]
}