{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 62, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/mock-data.ts"],"sourcesContent":["\nimport type { StatCardItem, ActivityLogEntry, ChartDataPoint, Supplier, Approver, User, Site, Allocation, Category, Client, PurchaseOrderPayload, FilterOption, QuotePayload, RequisitionPayload, Tag, FuelRecord, QuoteItem } from '@/types';\nimport { Archive, Loader, FolderOpen, Users as UsersIcon, FileText, GanttChartSquare, Layers, Building, Briefcase, TagIcon as TagLucideIcon, ClipboardList, Fuel, Truck, Package, ListChecks as ListChecksIcon, FileQuestion } from 'lucide-react';\n\nexport const dashboardStats: StatCardItem[] = [\n  {\n    title: 'Total POs',\n    value: 'N/A',\n    icon: Archive,\n    description: 'All purchase orders created.',\n  },\n  {\n    title: 'Pending Approval POs',\n    value: 'N/A',\n    icon: Loader,\n    description: 'POs awaiting approval actions.',\n  },\n  {\n    title: 'Open POs (Approved)',\n    value: 'N/A',\n    icon: FolderOpen,\n    description: 'POs approved and awaiting receipt.',\n  },\n  {\n    title: 'Total Requisitions',\n    value: 'N/A',\n    icon: ClipboardList,\n    description: 'Overview of internal purchase requisitions.',\n  },\n  {\n    title: 'Client Quotes',\n    value: 'N/A',\n    icon: FileText,\n    description: 'Overview of quotes issued to Jachris Mining Services clients.',\n  },\n  {\n    title: 'Fuel Records',\n    value: 'N/A',\n    icon: Fuel,\n    description: 'Summary of logged fuel consumption entries.',\n  },\n  {\n    title: 'Goods Received Notes', // This represents POs with GRN activity\n    value: 'N/A', \n    icon: Truck,\n    description: 'POs with items received.',\n  },\n];\n\nexport const monthlyStatusData: ChartDataPoint[] = [\n  { name: 'Jan', 'Approved': 240, 'Pending Approval': 50 },\n  { name: 'Feb', 'Approved': 139, 'Pending Approval': 30 },\n  { name: 'Mar', 'Approved': 480, 'Pending Approval': 60 },\n  { name: 'Apr', 'Approved': 390, 'Pending Approval': 40 },\n  { name: 'May', 'Approved': 480, 'Pending Approval': 20 },\n  { name: 'Jun', 'Approved': 380, 'Pending Approval': 70 },\n];\n\nexport const allocationsData: ChartDataPoint[] = [ \n  { name: 'TMW', 'ApprovedValue': 180000, 'PendingApprovalValue': 60000 },\n  { name: 'MEM', 'ApprovedValue': 130000, 'PendingApprovalValue': 40000 },\n  { name: 'FMS', 'ApprovedValue': 230000, 'PendingApprovalValue': 80000 },\n  { name: 'CHW', 'ApprovedValue': 100000, 'PendingApprovalValue': 30000 },\n];\n\nexport const activityLogData: ActivityLogEntry[] = [\n  { id: '1', user: 'Gil Lunguze', action: 'Created PO #PO12345', timestamp: '2025-06-11 10:30 AM', details: 'Vendor: Acme Corp, Total: $1500' },\n  { id: '2', user: 'Cherinne de Klerk', action: 'Approved PO #PO12344', timestamp: '2025-06-11 09:15 AM' },\n  { id: '3', user: 'System', action: 'GRN #GRN007 received for PO #PO12300', timestamp: '2025-06-11 03:45 PM', details: 'Items: 5/10 received' },\n  { id: '4', user: 'Pita Domingos', action: 'Updated user permissions for Portia Mbuva', timestamp: '2024-07-27 01:20 PM' },\n  { id: '5', user: 'System User', action: 'Generated Back Order Report', timestamp: '2025-06-11 11:00 AM', details: 'Date Range: 2025-05-01 to 2025-06-10' },\n  { id: '6', user: 'Portia Mbuva', action: 'Added new supplier: MozTech Solutions', timestamp: '2025-06-10 11:00 AM' },\n  { id: '7', user: 'System', action: 'User Cobus de Klerk logged in', timestamp: '2025-06-10 11:05 AM' },\n  { id: '8', user: 'Portia Mbuva', action: 'Modified PO #PO12340 quantities', timestamp: '2025-06-10 11:15 AM', details: 'Item ID 2, new quantity 15' },\n];\n\nexport const managementTables = [\n  { name: 'Suppliers', href: '/management/suppliers', icon: Package, count: 'N/A', description: \"Manage suppliers / vendors\", apiKey: 'suppliersCount' },\n  { name: 'Approvers', href: '/management/approvers', icon: UsersIcon, count: 'N/A', description: \"Manage PO approvers\", apiKey: 'approversCount' },\n  { name: 'Users', href: '/management/users', icon: UsersIcon, count: 'N/A', description: \"Manage system users and roles\", apiKey: 'usersCount' },\n  { name: 'Sites', href: '/management/sites', icon: Building, count: 'N/A', description: \"Manage company sites/locations\", apiKey: 'sitesCount' },\n  { name: 'Allocations', href: '/management/allocations', icon: Briefcase, count: 10, description: \"Manage cost allocations (Legacy - Use Sites for current locations). Count is mock.\", apiKey: undefined }, // No apiKey, count is mock\n  { name: 'Categories', href: '/management/categories', icon: TagLucideIcon, count: 'N/A', description: \"Manage item and service categories\", apiKey: 'categoriesCount' },\n  { name: 'Tags', href: '/management/tags', icon: Fuel, count: 'N/A', description: \"Manage tagged vehicles & equipment\", apiKey: 'tagsCount' },\n  { name: 'Clients', href: '/management/clients', icon: Briefcase, count: 'N/A', description: \"Manage client information\", apiKey: 'clientsCount'},\n];\n\nexport const months: FilterOption[] = [\n  { value: '01', label: 'January' }, { value: '02', label: 'February' }, { value: '03', label: 'March' },\n  { value: '04', label: 'April' }, { value: '05', label: 'May' }, { value: '06', label: 'June' },\n  { value: '07', label: 'July' }, { value: '08', label: 'August' }, { value: '09', label: 'September' },\n  { value: '10', label: 'October' }, { value: '11', label: 'November' }, { value: '12', label: 'December' },\n];\n\nexport const currentYear = new Date().getFullYear();\nexport const years: FilterOption[] = Array.from({ length: 10 }, (_, i) => ({\n  value: (currentYear - i).toString(),\n  label: (currentYear - i).toString(),\n}));\n\nexport const mockSitesData: Site[] = [\n  { id: 1, name: 'Tete Main Warehouse', location: 'Moatize', siteCode: 'TMW' },\n  { id: 2, name: 'Tete Main Lubrication', location: 'Moatize', siteCode: 'TML' },\n  { id: 3, name: 'Mota-Engil Mozambique', location: 'Moatize', siteCode: 'MEM' },\n  { id: 4, name: 'Fuel Management System', location: 'Moatize', siteCode: 'FMS' },\n  { id: 5, name: 'C. Hose Warehouse', location: 'Moatize', siteCode: 'CHW' },\n];\n\nexport const monthsWithAll: FilterOption[] = [{ value: 'all', label: 'All Months' }, ...months];\nexport const yearsWithAll: FilterOption[] = [{ value: 'all', label: 'All Years' }, ...years];\nexport const sitesWithAll: FilterOption[] = [\n    { value: 'all', label: 'All Sites' },\n    ...mockSitesData.map(s => ({value: s.id.toString(), label: `${s.siteCode || s.name} (${s.name})`}))\n];\n\nexport const spendByVendorData: ChartDataPoint[] = [\n  { name: 'ACP01', Spend: 125000 },\n  { name: 'ADV01', Spend: 85000 },\n  { name: 'AMT01', Spend: 62000 },\n  { name: 'AF001', Spend: 45000 },\n  { name: 'AFR01', Spend: 98000 },\n];\n\nexport const mockCategoriesData: Category[] = [\n    { id: 1, category: 'Safety Consumables' },\n    { id: 2, category: 'Fleet Maintenance' },\n    { id: 3, category: 'Tools and Accessories' },\n    { id: 4, category: 'Stationery' },\n    { id: 5, category: 'Building Maintenance' },\n    { id: 6, category: 'Uniforms' },\n    { id: 7, category: 'Advertising/Marketing' },\n    { id: 8, category: 'Gvt Taxes' },\n    { id: 9, category: 'Communication' },\n    { id: 10, category: 'Furniture' },\n    { id: 11, category: 'Workshop Consumables' },\n    { id: 12, category: 'Third-party Services' },\n    { id: 13, category: 'IT Equipment' },\n    { id: 14, category: 'IT Consumables' },\n    { id: 15, category: 'Others (Specify)' },\n];\n\nexport const poCountByCategoryData: ChartDataPoint[] = mockCategoriesData.slice(0,6).map(cat => ({\n    name: cat.category,\n    Count: Math.floor(Math.random() * 100) + 20\n}));\n\nexport const mockSuppliers: Supplier[] = [\n  { supplierCode: 'ACP01', supplierName: 'AC PECAS ,LDA', emailAddress: 'okechukwuchigaemezu@gmail.com', salesPerson: 'Okechukwu', cellNumber: '258 87 588 8556', nuitNumber: '400 515 931', physicalAddress: 'Estrada Nacional 7, Bairro Chingodzi' },\n  { supplierCode: 'ADV01', supplierName: 'ADVANCED CONSULTORIA E SERVICOS ,LDA', emailAddress: 'geral.advanced@outlook.pt', cellNumber: '258 84 045 9167', physicalAddress: 'Bairro Chingodzi , Tete' },\n  { supplierCode: 'AMT01', supplierName: 'AMTECH ENGINEERING SOLUTIONS', emailAddress: 'sales@amtecheng-solutions.com', cellNumber: '848976253', nuitNumber: '401 266 402', physicalAddress: 'Bairro Chingodzi , Tete' },\n];\n\nexport const mockApproversData: Approver[] = [\n  { id: 'approver_001', name: 'Cherinne de Klerk', email: 'cherinne.deklerk@jachris.com', department: 'All', isActive: true, approvalLimit: 50000.00 },\n  { id: 'approver_002', name: 'Cobus de Klerk', email: 'cobus.deklerk@jachris.com', department: 'All', isActive: true, approvalLimit: 50000.00 },\n  { id: 'approver_003', name: 'Pita Domingos', email: 'pita.domingos@jachris.com', department: 'All', isActive: true, approvalLimit: 5000.00 },\n];\n\nexport const mockUsersData: User[] = [\n  { id: 'user_001', name: 'Pita Domingos', email: 'pita.domingos@jachris.com', role: 'Admin', siteAccess: ['all'], isActive: true },\n  { id: 'user_002', name: 'Portia Mbuva', email: 'portia.mbuva@jachris.com', role: 'Creator', siteAccess: ['all'], isActive: true },\n  { id: 'user_003', name: 'Cherinne de Klerk', email: 'cherinne.deklerk@jachris.com', role: 'Approver', siteAccess: ['all'], isActive: true },\n  { id: 'user_004', name: 'Cobus de Klerk', email: 'cobus.klerk@jachris.com', role: 'Approver', siteAccess: ['all'], isActive: true },\n  { id: 'user_005', name: 'Gil Lunguze', email: 'gil.lunguze@jachris.com', role: 'Creator', siteAccess: ['all'], isActive: true },\n];\n\nexport const mockClients: Client[] = [\n  { id: 'client-001', name: 'Vale Mozambique', email: 'procurement@vale.co.mz', contactPerson: 'Mr. Silva', address: 'Vale Office Park, Moatize', city: 'Moatize', country: 'Mozambique' },\n  { id: 'client-002', name: 'Mota-Engil', email: 'compras@mota-engil.mz', contactPerson: 'Ms. Ferreira', address: 'Mota-Engil Site, Tete', city: 'Tete', country: 'Mozambique' },\n  { id: 'client-003', name: 'WBHO', email: 'tenders.mz@wbho.co.za', contactPerson: 'Mr. Botha', address: 'WBHO Camp, Nacala Corridor', city: 'Nacala', country: 'Mozambique' },\n  { id: 'client-004', name: 'Local Mining Co-op', email: 'info@localminingcoop.org', contactPerson: 'Sra. Tembe', address: 'Rua da Cooperativa, Tete City', city: 'Tete', country: 'Mozambique' },\n];\n\nexport const mockPurchaseOrders: PurchaseOrderPayload[] = [\n  {\n    id: 1, poNumber: 'PO-00001', creationDate: '2024-07-01T10:00:00Z', status: 'Approved',\n    supplierId: 'ACP01', grandTotal: 1500, currency: 'MZN', requestedByName: 'Alice Smith', approverId: 'approver_001',\n    items: [{id:1, description: 'Item A', quantity:10, unitPrice:100, categoryId:1, uom:'EA', quantityReceived: 0, itemStatus: 'Pending'}], subTotal: 1293.10, vatAmount: 206.90, pricesIncludeVat: false, creatorUserId: 'user_002',\n    approverName: 'Cherinne de Klerk', supplierName: 'AC PECAS ,LDA', creatorName: 'Portia Mbuva'\n  },\n  {\n    id: 2, poNumber: 'PO-00002', creationDate: '2024-06-15T14:30:00Z', status: 'Pending Approval',\n    supplierId: 'ADV01', grandTotal: 800, currency: 'USD', requestedByName: 'Bob Johnson', approverId: 'approver_002',\n    items: [{id:2, description: 'Service B', quantity:1, unitPrice:800, categoryId:5, uom:'SVC', quantityReceived: 0, itemStatus: 'Pending'}], subTotal: 800, vatAmount: 0, pricesIncludeVat: false, creatorUserId: 'user_005',\n    approverName: 'Cobus de Klerk', supplierName: 'ADVANCED CONSULTORIA E SERVICOS ,LDA', creatorName: 'Gil Lunguze'\n  },\n   {\n    id: 3, poNumber: 'PO-00003', creationDate: '2023-12-05T11:20:00Z', status: 'Approved',\n    supplierId: 'AMT01', grandTotal: 25000, currency: 'MZN', requestedByName: 'Carol White', approverId: 'approver_001',\n    items: [{id:3, description: 'Hardware C', quantity:50, unitPrice:431.03, categoryId:4, uom:'BOX', quantityReceived: 50, itemStatus: 'Fully Received'}], subTotal: 21551.72, vatAmount: 3448.28, pricesIncludeVat: false, creatorUserId: 'user_002',\n    approverName: 'Cherinne de Klerk', supplierName: 'AMTECH ENGINEERING SOLUTIONS', creatorName: 'Portia Mbuva'\n  },\n];\n\nexport const mockApproversFilter: FilterOption[] = [\n  { value: 'all', label: 'All Approvers' },\n  ...mockApproversData.map(app => ({ value: app.id, label: app.name })),\n];\n\nexport const mockRequestorsFilter: FilterOption[] = [\n  { value: 'all', label: 'All Requestors' },\n  ...mockUsersData.filter(u => u.role === 'Creator' || u.role === 'Manager' || u.role === 'Admin' || u.role === 'User')\n                 .map(u => ({ value: u.id, label: u.name })),\n].filter((value, index, self) => index === self.findIndex((t) => (t.value === value.value)));\n\nexport const mockAllocationsData: Allocation[] = [\n    { id: 'ALLOC001', name: 'Administration', code: 'ADM001', description: 'General administrative costs' },\n    { id: 'ALLOC002', name: 'Operations - Site A', code: 'OPS-A01', description: 'Operational costs for Site A' },\n    { id: 'ALLOC003', name: 'IT Department', code: 'ITD001', description: 'Information Technology expenses' },\n    { id: 'ALLOC004', name: 'Marketing & Sales', code: 'MKT001' },\n    { id: 'ALLOC005', name: 'Logistics', code: 'LOG001', description: 'Transport and logistics costs' },\n    { id: 'ALLOC006', name: 'Maintenance', code: 'MNT001' },\n    { id: 'ALLOC007', name: 'HR Department', code: 'HRD001' },\n    { id: 'ALLOC008', name: 'Project Alpha', code: 'PRJ-ALP' },\n    { id: 'ALLOC009', name: 'Project Beta', code: 'PRJ-BET' },\n    { id: 'ALLOC010', name: 'Capital Expenditure', code: 'CAPEX01' },\n];\n\nexport const mockTagsData: Tag[] = [\n  { id: 'TAG001', tagNumber: 'LDV001', registration: 'ALL-001-MP', make: 'Toyota', model: 'Hilux D4D', tankCapacity: 80, year: 2022, chassisNo: 'XYZ123CHASSIS', type: 'LDV', siteId: 1, siteName: 'TMW', status: 'Active' },\n  { id: 'TAG002', tagNumber: 'TRK005', registration: 'ATR-005-MP', make: 'Mercedes', model: 'Actros', tankCapacity: 400, year: 2020, chassisNo: 'ABC789CHASSIS', type: 'Truck', siteId: 2, siteName: 'TML', status: 'Active' },\n  { id: 'TAG003', tagNumber: 'GEN002', type: 'Generator', make: 'CAT', model: 'Olympian GEP22', tankCapacity: 50, siteId: 1, siteName: 'TMW', status: 'Under Maintenance' },\n  { id: 'TAG004', tagNumber: 'FORK001', type: 'Forklift', make: 'Toyota', model: '8FD30', siteId: 3, siteName: 'MEM', status: 'Inactive' },\n  { id: 'TAG005', tagNumber: 'LDV002', registration: 'NTR-002-TT', make: 'Ford', model: 'Ranger', tankCapacity: 70, year: 2023, type: 'LDV', siteId: 1, siteName: 'TMW', status: 'Active' },\n];\n\nexport const tagsWithAll: FilterOption[] = [\n  { value: 'all', label: 'All Tags' },\n  ...mockTagsData.map(tag => ({ value: tag.id, label: `${tag.tagNumber} (${tag.make || ''} ${tag.model || tag.type || ''})`}))\n];\n\nexport const mockFuelRecordsData: FuelRecord[] = [\n  { id: 'FUEL001', fuelDate: '2024-07-28T08:00:00Z', driver: 'John Doe', odometer: 125000, tagId: 'TAG001', siteId: 1, description: 'Diesel Top-up', uom: 'Liters', quantity: 75, unitCost: 85.50, totalCost: 6412.50, tagName: 'LDV001', siteName: 'TMW' },\n  { id: 'FUEL002', fuelDate: '2024-07-28T09:30:00Z', driver: 'Jane Smith', odometer: 250000, tagId: 'TAG002', siteId: 2, description: 'Diesel Full Tank', uom: 'Liters', quantity: 380, unitCost: 85.00, totalCost: 32300.00, tagName: 'TRK005', siteName: 'TML' },\n  { id: 'FUEL003', fuelDate: '2024-07-27T15:00:00Z', driver: 'System User', tagId: 'TAG003', siteId: 1, description: 'Generator Refuel', uom: 'Liters', quantity: 45, unitCost: 86.00, totalCost: 3870.00, tagName: 'GEN002', siteName: 'TMW' },\n  { id: 'FUEL004', fuelDate: '2024-07-29T10:00:00Z', driver: 'John Doe', odometer: 125650, tagId: 'TAG001', siteId: 1, description: 'Diesel Refuel', uom: 'Liters', quantity: 60, unitCost: 86.00, totalCost: 5160.00, tagName: 'LDV001', siteName: 'TMW' },\n  { id: 'FUEL005', fuelDate: '2024-07-29T11:00:00Z', driver: 'Mike Brown', odometer: 1500, tagId: 'TAG004', siteId: 3, description: 'Forklift Diesel', uom: 'Liters', quantity: 25, unitCost: 85.75, totalCost: 2143.75, tagName: 'FORK001', siteName: 'MEM' },\n];\n    \n\n    "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 996, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/api/fuel-records/route.ts"],"sourcesContent":["\nimport { NextResponse } from 'next/server';\nimport type { FuelRecord } from '@/types';\nimport { mockFuelRecordsData, mockTagsData, mockSitesData } from '@/lib/mock-data';\nimport csv from 'csv-parser';\nimport { Readable } from 'stream';\n\n// Mock database for fuel records\nlet MOCK_FUEL_RECORDS_DB: FuelRecord[] = [...mockFuelRecordsData];\n\nexport async function POST(request: Request) {\n  const contentType = request.headers.get('content-type');\n\n  if (contentType && contentType.includes('multipart/form-data')) {\n    console.log('[API_INFO] /api/fuel-records POST: Received multipart/form-data request for CSV upload.');\n    try {\n      const formData = await request.formData();\n      const file = formData.get('file') as File | null;\n      \n      if (!file) {\n        console.error('[API_ERROR] /api/fuel-records POST CSV: No file found in formData.');\n        return NextResponse.json({ error: 'No file uploaded' }, { status: 400 });\n      }\n      console.log(`[API_INFO] /api/fuel-records POST CSV: Received file: ${file.name}, size: ${file.size}, type: ${file.type}`);\n      \n      const fileBuffer = Buffer.from(await file.arrayBuffer());\n      const results: any[] = [];\n      const stream = Readable.from(fileBuffer);\n      let firstRecordLogged = false;\n\n      console.log('[API_INFO] /api/fuel-records POST CSV: Starting CSV parsing...');\n      await new Promise<void>((resolve, reject) => {\n        stream\n          .pipe(csv({\n            mapHeaders: ({ header }) => header.trim() // Trim headers\n          }))\n          .on('headers', (headers) => {\n            console.log('[API_INFO] /api/fuel-records POST CSV: Detected CSV Headers:', headers);\n          })\n          .on('data', (data) => {\n            if (!firstRecordLogged) {\n              console.log('[API_DEBUG] /api/fuel-records POST CSV: First parsed data record from CSV:', data);\n              firstRecordLogged = true;\n            }\n            results.push(data);\n          })\n          .on('end', () => {\n            console.log(`[API_INFO] /api/fuel-records POST CSV: CSV parsing finished. ${results.length} records found.`);\n            // TODO: Here you would typically validate and process `results` into your DB\n            // For now, just logging and returning success.\n            resolve();\n          })\n          .on('error', (parseError) => {\n            console.error('[API_ERROR] /api/fuel-records POST CSV: Error during CSV parsing:', parseError);\n            reject(parseError);\n          });\n      });\n\n      if (results.length === 0) {\n        console.warn('[API_WARN] /api/fuel-records POST CSV: CSV file is empty or could not be parsed into records.');\n        return NextResponse.json({ message: 'CSV file is empty or yielded no records.' }, { status: 400 });\n      }\n      \n      return NextResponse.json({ message: `Fuel records CSV uploaded and parsed successfully. ${results.length} records found. (Data not saved to DB yet)` }, { status: 200 });\n\n    } catch (error: any) {\n      console.error('[API_ERROR] /api/fuel-records POST CSV: Error handling fuel record CSV upload (outer try-catch):', error);\n      return NextResponse.json({ error: 'Failed to handle fuel record CSV upload.', details: error.message }, { status: 500 });\n    }\n\n  } else if (contentType && contentType.includes('application/json')) {\n    console.log('[API_INFO] /api/fuel-records POST: Received application/json request.');\n    try {\n      const fuelData = await request.json() as Omit<FuelRecord, 'id' | 'totalCost' | 'tagName' | 'siteName' | 'distanceTravelled'>;\n\n      const newFuelRecordId = `MOCK-FUELID-${Date.now()}`;\n      const newFuelRecord: FuelRecord = {\n        ...fuelData,\n        id: newFuelRecordId,\n        totalCost: (fuelData.quantity || 0) * (fuelData.unitCost || 0),\n        tagName: mockTagsData.find(t => t.id === fuelData.tagId)?.tagNumber || 'N/A',\n        siteName: mockSitesData.find(s => s.id === fuelData.siteId)?.siteCode || 'N/A',\n        distanceTravelled: null,\n      };\n      MOCK_FUEL_RECORDS_DB.push(newFuelRecord);\n      MOCK_FUEL_RECORDS_DB.sort((a, b) => new Date(b.fuelDate).getTime() - new Date(a.fuelDate).getTime());\n\n      console.log('Mocked saving fuel record (JSON):', newFuelRecord);\n      return NextResponse.json({ message: 'Fuel record saved successfully (simulated)', fuelRecordId: newFuelRecordId }, { status: 201 });\n\n    } catch (error: any) {\n      console.error('[API_ERROR] /api/fuel-records POST JSON: Error creating fuel record:', error);\n      return NextResponse.json({ error: 'Failed to create fuel record.', details: error.message }, { status: 500 });\n    }\n  } else {\n    console.warn(`[API_WARN] /api/fuel-records POST: Unsupported Content-Type: ${contentType}`);\n    return NextResponse.json({ error: 'Unsupported Content-Type' }, { status: 415 });\n  }\n}\n\n\nexport async function GET(request: Request) {\n  const { searchParams } = new URL(request.url);\n  const month = searchParams.get('month');\n  const year = searchParams.get('year');\n  const siteIdParam = searchParams.get('siteId');\n  const tagIdParam = searchParams.get('tagId');\n  const driver = searchParams.get('driver');\n\n  let filteredRecords = [...MOCK_FUEL_RECORDS_DB];\n\n  if (month && month !== 'all') {\n    filteredRecords = filteredRecords.filter(rec => {\n      const recMonth = new Date(rec.fuelDate).getMonth() + 1;\n      return recMonth.toString().padStart(2, '0') === month;\n    });\n  }\n  if (year && year !== 'all') {\n    filteredRecords = filteredRecords.filter(rec => {\n      const recYear = new Date(rec.fuelDate).getFullYear();\n      return recYear.toString() === year;\n    });\n  }\n  if (siteIdParam && siteIdParam !== 'all') {\n    filteredRecords = filteredRecords.filter(rec => rec.siteId?.toString() === siteIdParam);\n  }\n  if (tagIdParam && tagIdParam !== 'all') {\n    filteredRecords = filteredRecords.filter(rec => rec.tagId === tagIdParam);\n  }\n  if (driver && driver.trim() !== '') {\n    filteredRecords = filteredRecords.filter(rec => rec.driver?.toLowerCase().includes(driver.toLowerCase()));\n  }\n\n  const recordsByTag: { [key: string]: FuelRecord[] } = {};\n  filteredRecords.forEach(rec => {\n    if (!recordsByTag[rec.tagId]) {\n      recordsByTag[rec.tagId] = [];\n    }\n    recordsByTag[rec.tagId].push(rec);\n  });\n\n  const recordsWithDistance: FuelRecord[] = [];\n  for (const tagId in recordsByTag) {\n    const tagRecords = recordsByTag[tagId].sort((a, b) => {\n      const dateDiff = new Date(a.fuelDate).getTime() - new Date(b.fuelDate).getTime();\n      if (dateDiff !== 0) return dateDiff;\n      return (a.odometer || 0) - (b.odometer || 0);\n    });\n\n    for (let i = 0; i < tagRecords.length; i++) {\n      const currentRecord = { ...tagRecords[i] };\n      if (i > 0 && currentRecord.odometer && tagRecords[i-1].odometer) {\n        currentRecord.distanceTravelled = currentRecord.odometer - tagRecords[i-1].odometer!;\n      } else {\n        currentRecord.distanceTravelled = null;\n      }\n      currentRecord.tagName = mockTagsData.find(t => t.id === currentRecord.tagId)?.tagNumber || currentRecord.tagId || 'N/A';\n      currentRecord.siteName = mockSitesData.find(s => s.id === currentRecord.siteId)?.siteCode || (currentRecord.siteId ? `Site ID ${currentRecord.siteId}` : 'N/A'); // Use siteCode\n      recordsWithDistance.push(currentRecord);\n    }\n  }\n\n  recordsWithDistance.sort((a, b) => new Date(b.fuelDate).getTime() - new Date(a.fuelDate).getTime());\n\n  try {\n    return NextResponse.json(recordsWithDistance);\n  } catch (error) {\n    console.error('Error fetching fuel records (mock):', error);\n    return NextResponse.json({ error: 'Failed to fetch fuel records' }, { status: 500 });\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}