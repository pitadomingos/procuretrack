{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 62, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/api/sites/route.js"],"sourcesContent":["\nimport { NextResponse } from 'next/server';\n\nexport async function GET() {\n  let connection;\n  try {\n    const { pool } = await import('../../../../backend/db.js');\n    connection = await pool.getConnection();\n    const [rows] = await connection.execute('SELECT * FROM Site ORDER BY name ASC');\n    return NextResponse.json(rows);\n  } catch (error) {\n    console.error('Error fetching sites:', error);\n    return NextResponse.json({ error: 'Failed to fetch sites' }, { status: 500 });\n  } finally {\n      if (connection) connection.release();\n  }\n}\n\nexport async function POST(request) { // Removed \": Request\" type annotation\n  let connection;\n  try {\n    const { pool } = await import('../../../../backend/db.js');\n    connection = await pool.getConnection();\n    const { name, location, siteCode } = await request.json();\n\n    if (!name) {\n      return NextResponse.json({ error: 'Site name is required' }, { status: 400 });\n    }\n\n    const [result] = await connection.execute(\n      'INSERT INTO Site (name, location, siteCode) VALUES (?, ?, ?)',\n      [name, location || null, siteCode || null]\n    );\n\n    const insertId = result.insertId;\n\n    if (!insertId) {\n        console.error('Failed to get insertId from site creation:', result);\n        return NextResponse.json({ error: 'Failed to create site, could not retrieve ID.' }, { status: 500 });\n    }\n\n    const [newSiteRows] = await connection.execute('SELECT * FROM Site WHERE id = ?', [insertId]);\n    \n    if (Array.isArray(newSiteRows) && newSiteRows.length > 0) {\n        return NextResponse.json(newSiteRows[0], { status: 201 });\n    } else {\n        return NextResponse.json({ error: 'Site created but failed to retrieve it.' }, { status: 500 });\n    }\n\n  } catch (error) {\n    console.error('Error creating site:', error);\n    if (error && typeof error === 'object' && 'code' in error && error.code === 'ER_DUP_ENTRY') {\n        return NextResponse.json({ error: 'A site with this name or code may already exist.' }, { status: 409 });\n    }\n    const errorMessage = (error instanceof Error) ? error.message : String(error);\n    return NextResponse.json({ error: 'Failed to create site', details: errorMessage }, { status: 500 });\n  } finally {\n      if (connection) connection.release();\n  }\n}\n"],"names":[],"mappings":";;;;AACA;;AAEO,eAAe;IACpB,IAAI;IACJ,IAAI;QACF,MAAM,EAAE,IAAI,EAAE,GAAG;QACjB,aAAa,MAAM,KAAK,aAAa;QACrC,MAAM,CAAC,KAAK,GAAG,MAAM,WAAW,OAAO,CAAC;QACxC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,yBAAyB;QACvC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAwB,GAAG;YAAE,QAAQ;QAAI;IAC7E,SAAU;QACN,IAAI,YAAY,WAAW,OAAO;IACtC;AACF;AAEO,eAAe,KAAK,OAAO;IAChC,IAAI;IACJ,IAAI;QACF,MAAM,EAAE,IAAI,EAAE,GAAG;QACjB,aAAa,MAAM,KAAK,aAAa;QACrC,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG,MAAM,QAAQ,IAAI;QAEvD,IAAI,CAAC,MAAM;YACT,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAwB,GAAG;gBAAE,QAAQ;YAAI;QAC7E;QAEA,MAAM,CAAC,OAAO,GAAG,MAAM,WAAW,OAAO,CACvC,gEACA;YAAC;YAAM,YAAY;YAAM,YAAY;SAAK;QAG5C,MAAM,WAAW,OAAO,QAAQ;QAEhC,IAAI,CAAC,UAAU;YACX,QAAQ,KAAK,CAAC,8CAA8C;YAC5D,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAgD,GAAG;gBAAE,QAAQ;YAAI;QACvG;QAEA,MAAM,CAAC,YAAY,GAAG,MAAM,WAAW,OAAO,CAAC,mCAAmC;YAAC;SAAS;QAE5F,IAAI,MAAM,OAAO,CAAC,gBAAgB,YAAY,MAAM,GAAG,GAAG;YACtD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,EAAE;gBAAE,QAAQ;YAAI;QAC3D,OAAO;YACH,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAA0C,GAAG;gBAAE,QAAQ;YAAI;QACjG;IAEF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,wBAAwB;QACtC,IAAI,SAAS,OAAO,UAAU,YAAY,UAAU,SAAS,MAAM,IAAI,KAAK,gBAAgB;YACxF,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAmD,GAAG;gBAAE,QAAQ;YAAI;QAC1G;QACA,MAAM,eAAe,AAAC,iBAAiB,QAAS,MAAM,OAAO,GAAG,OAAO;QACvE,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;YAAyB,SAAS;QAAa,GAAG;YAAE,QAAQ;QAAI;IACpG,SAAU;QACN,IAAI,YAAY,WAAW,OAAO;IACtC;AACF","debugId":null}}]
}