{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 62, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/api/auth/login/route.ts"],"sourcesContent":["\nimport { NextResponse } from 'next/server';\nimport { cookies } from 'next/headers';\n// The static pool import is removed from here to prevent module-level crashes.\n// import { pool } from '../../../../../backend/db.js';\n\nconst SESSION_COOKIE_NAME = 'procuretrack-session-cookie';\n\nexport async function POST(request: Request) {\n  try {\n    // Dynamic import: DB connection is only attempted when the API is called.\n    const { pool } = await import('../../../../../backend/db.js');\n    \n    const body = await request.json();\n    const { email, password } = body;\n\n    if (!email || !password) {\n      return NextResponse.json({ error: 'Email and password are required.' }, { status: 400 });\n    }\n\n    const [rows]: any[] = await pool.execute(\n      'SELECT id, name, email, role, isActive, password FROM User WHERE email = ?',\n      [email]\n    );\n\n    if (rows.length === 0) {\n      return NextResponse.json({ error: 'Invalid email or password.' }, { status: 401 });\n    }\n\n    const user = rows[0];\n\n    if (!user.isActive) {\n      return NextResponse.json({ error: 'Your account is inactive. Please contact an administrator.' }, { status: 403 });\n    }\n    \n    // In a real production app, use bcrypt.compare(password, user.password)\n    const isValid = password === user.password;\n\n    if (!isValid) {\n      return NextResponse.json({ error: 'Invalid email or password.' }, { status: 401 });\n    }\n\n    // In a real app, you would generate a secure, signed JWT here.\n    // For this prototype, we store user data directly in the cookie.\n    const sessionData = JSON.stringify({\n        id: user.id,\n        name: user.name,\n        email: user.email,\n        role: user.role,\n        isActive: user.isActive,\n    });\n    \n    const expiresIn = 60 * 60 * 24 * 7 * 1000; // 7 days\n\n    cookies().set(SESSION_COOKIE_NAME, sessionData, {\n      httpOnly: true,\n      secure: process.env.NODE_ENV === 'production',\n      maxAge: expiresIn / 1000,\n      path: '/',\n      sameSite: 'lax',\n    });\n    \n    // Do not send the password back to the client\n    const { password: _, ...userResponse } = user;\n    return NextResponse.json(userResponse);\n\n  } catch (error: any) {\n    console.error('Login error:', error);\n    \n    // Default error message\n    let errorMessage = 'An internal server error occurred during login.';\n    \n    // Check for specific DB connection errors by looking at the error code or message\n    if (error.code && ['ECONNREFUSED', 'ER_ACCESS_DENIED_ERROR', 'ENOTFOUND'].includes(error.code)) {\n        errorMessage = 'Database connection failed. Please verify your DB_HOST, DB_USER, and DB_PASSWORD in the .env file.';\n    } else if (error.message && error.message.includes('Missing essential database environment variables')) {\n        errorMessage = 'Database configuration is incomplete. Please define all required DB variables in the .env file.';\n    }\n    \n    return NextResponse.json({ \n        error: errorMessage, \n        details: `[${error.code || 'NO_CODE'}] ${error.message}` // Provide more detail for debugging\n    }, { status: 500 });\n  }\n}\n"],"names":[],"mappings":";;;AACA;AACA;;;AACA,+EAA+E;AAC/E,uDAAuD;AAEvD,MAAM,sBAAsB;AAErB,eAAe,KAAK,OAAgB;IACzC,IAAI;QACF,0EAA0E;QAC1E,MAAM,EAAE,IAAI,EAAE,GAAG;QAEjB,MAAM,OAAO,MAAM,QAAQ,IAAI;QAC/B,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG;QAE5B,IAAI,CAAC,SAAS,CAAC,UAAU;YACvB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAmC,GAAG;gBAAE,QAAQ;YAAI;QACxF;QAEA,MAAM,CAAC,KAAK,GAAU,MAAM,KAAK,OAAO,CACtC,8EACA;YAAC;SAAM;QAGT,IAAI,KAAK,MAAM,KAAK,GAAG;YACrB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAA6B,GAAG;gBAAE,QAAQ;YAAI;QAClF;QAEA,MAAM,OAAO,IAAI,CAAC,EAAE;QAEpB,IAAI,CAAC,KAAK,QAAQ,EAAE;YAClB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAA6D,GAAG;gBAAE,QAAQ;YAAI;QAClH;QAEA,wEAAwE;QACxE,MAAM,UAAU,aAAa,KAAK,QAAQ;QAE1C,IAAI,CAAC,SAAS;YACZ,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAA6B,GAAG;gBAAE,QAAQ;YAAI;QAClF;QAEA,+DAA+D;QAC/D,iEAAiE;QACjE,MAAM,cAAc,KAAK,SAAS,CAAC;YAC/B,IAAI,KAAK,EAAE;YACX,MAAM,KAAK,IAAI;YACf,OAAO,KAAK,KAAK;YACjB,MAAM,KAAK,IAAI;YACf,UAAU,KAAK,QAAQ;QAC3B;QAEA,MAAM,YAAY,KAAK,KAAK,KAAK,IAAI,MAAM,SAAS;QAEpD,CAAA,GAAA,iIAAA,CAAA,UAAO,AAAD,IAAI,GAAG,CAAC,qBAAqB,aAAa;YAC9C,UAAU;YACV,QAAQ,oDAAyB;YACjC,QAAQ,YAAY;YACpB,MAAM;YACN,UAAU;QACZ;QAEA,8CAA8C;QAC9C,MAAM,EAAE,UAAU,CAAC,EAAE,GAAG,cAAc,GAAG;QACzC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAE3B,EAAE,OAAO,OAAY;QACnB,QAAQ,KAAK,CAAC,gBAAgB;QAE9B,wBAAwB;QACxB,IAAI,eAAe;QAEnB,kFAAkF;QAClF,IAAI,MAAM,IAAI,IAAI;YAAC;YAAgB;YAA0B;SAAY,CAAC,QAAQ,CAAC,MAAM,IAAI,GAAG;YAC5F,eAAe;QACnB,OAAO,IAAI,MAAM,OAAO,IAAI,MAAM,OAAO,CAAC,QAAQ,CAAC,qDAAqD;YACpG,eAAe;QACnB;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACrB,OAAO;YACP,SAAS,CAAC,CAAC,EAAE,MAAM,IAAI,IAAI,UAAU,EAAE,EAAE,MAAM,OAAO,EAAE,CAAC,oCAAoC;QACjG,GAAG;YAAE,QAAQ;QAAI;IACnB;AACF","debugId":null}}]
}