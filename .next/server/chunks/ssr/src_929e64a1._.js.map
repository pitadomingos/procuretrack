{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 199, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/shared/filter-bar.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState, useEffect, useCallback } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport type { FilterOption, Site, Approver, User, Tag } from '@/types';\nimport { Filter, Loader2 } from 'lucide-react';\nimport { useToast } from '@/hooks/use-toast';\n\nconst months: FilterOption[] = [\n  { value: '01', label: 'January' }, { value: '02', label: 'February' }, { value: '03', label: 'March' },\n  { value: '04', label: 'April' }, { value: '05', label: 'May' }, { value: '06', label: 'June' },\n  { value: '07', label: 'July' }, { value: '08', label: 'August' }, { value: '09', label: 'September' },\n  { value: '10', label: 'October' }, { value: '11', label: 'November' }, { value: '12', label: 'December' },\n];\nconst monthsWithAll: FilterOption[] = [{ value: 'all', label: 'All Months' }, ...months];\n\nconst currentYear = new Date().getFullYear();\nconst years: FilterOption[] = Array.from({ length: 10 }, (_, i) => ({\n  value: (currentYear - i).toString(),\n  label: (currentYear - i).toString(),\n}));\nconst yearsWithAll: FilterOption[] = [{ value: 'all', label: 'All Years' }, ...years];\n\ninterface FilterBarProps {\n  onFilterApply?: (filters: {\n    month?: string;\n    year?: string;\n    siteId?: string;\n    approverId?: string;\n    creatorUserId?: string;\n    tagId?: string;\n    driver?: string;\n    user?: string; // For generic user name filter (e.g., Activity Log)\n    action?: string; // For generic action type filter (e.g., Activity Log)\n    status?: string; // For status filter, e.g., Requisitions\n  }) => void;\n  showApproverFilter?: boolean;\n  showRequestorFilter?: boolean;\n  showSiteFilter?: boolean;\n  showTagFilter?: boolean;\n  showDriverFilter?: boolean;\n  showUserFilter?: boolean;\n  showActionTypeFilter?: boolean;\n  showStatusFilter?: boolean; // Added for Requisition status\n  statusOptions?: FilterOption[]; // Options for the status dropdown\n}\n\nexport function FilterBar({\n  onFilterApply,\n  showApproverFilter = false,\n  showRequestorFilter = false,\n  showSiteFilter = false,\n  showTagFilter = false,\n  showDriverFilter = false,\n  showUserFilter = false,\n  showActionTypeFilter = false,\n  showStatusFilter = false,\n  statusOptions = [],\n}: FilterBarProps) {\n  const { toast } = useToast();\n  const [isLoadingFilters, setIsLoadingFilters] = useState(false);\n\n  const [selectedMonth, setSelectedMonth] = useState<string>((new Date().getMonth() + 1).toString().padStart(2, '0'));\n  const [selectedYear, setSelectedYear] = useState<string>(new Date().getFullYear().toString());\n  \n  const [sites, setSites] = useState<FilterOption[]>([{ value: 'all', label: 'All Sites' }]);\n  const [selectedSite, setSelectedSite] = useState<string>('all');\n\n  const [approvers, setApprovers] = useState<FilterOption[]>([{ value: 'all', label: 'All Approvers' }]);\n  const [selectedApprover, setSelectedApprover] = useState<string>('all');\n\n  const [requestors, setRequestors] = useState<FilterOption[]>([{ value: 'all', label: 'All Requestors' }]);\n  const [selectedRequestor, setSelectedRequestor] = useState<string>('all');\n  \n  const [tags, setTags] = useState<FilterOption[]>([{ value: 'all', label: 'All Tags' }]);\n  const [selectedTag, setSelectedTag] = useState<string>('all');\n  \n  const [driverName, setDriverName] = useState<string>('');\n  const [userNameFilter, setUserNameFilter] = useState<string>('');\n  const [actionTypeFilterText, setActionTypeFilterText] = useState<string>(''); // Renamed from actionTypeFilter to avoid conflict with prop\n  const [selectedStatus, setSelectedStatus] = useState<string>('all');\n\n\n  const fetchFilterData = useCallback(async () => {\n    setIsLoadingFilters(true);\n    try {\n      const promises = [];\n      if (showSiteFilter) promises.push(fetch('/api/sites'));\n      else promises.push(Promise.resolve(null)); \n\n      if (showApproverFilter) promises.push(fetch('/api/approvers'));\n      else promises.push(Promise.resolve(null));\n\n      if (showRequestorFilter) promises.push(fetch('/api/users'));\n      else promises.push(Promise.resolve(null));\n\n      if (showTagFilter) promises.push(fetch('/api/tags'));\n      else promises.push(Promise.resolve(null));\n\n\n      const responses = await Promise.all(promises);\n      const data = await Promise.all(responses.map(res => res && res.ok ? res.json() : Promise.resolve([])));\n\n      if (showSiteFilter && data[0]) {\n        const siteData: Site[] = data[0];\n        setSites([{ value: 'all', label: 'All Sites' }, ...siteData.map(s => ({ value: s.id.toString(), label: `${s.siteCode || s.name} (${s.name})` }))]);\n      }\n      if (showApproverFilter && data[1]) {\n        const approverData: Approver[] = data[1];\n        setApprovers([{ value: 'all', label: 'All Approvers' }, ...approverData.map(a => ({ value: a.id, label: a.name }))]);\n      }\n      if (showRequestorFilter && data[2]) {\n        const userData: User[] = data[2];\n        setRequestors([{ value: 'all', label: 'All Requestors' }, ...userData.map(u => ({ value: u.id, label: u.name }))]);\n      }\n      if (showTagFilter && data[3]) {\n        const tagData: Tag[] = data[3];\n        setTags([{ value: 'all', label: 'All Tags' }, ...tagData.map(t => ({ value: t.id, label: `${t.tagNumber} (${t.make || ''} ${t.model || t.type || ''})`}))]);\n      }\n\n    } catch (error) {\n      toast({ title: 'Error', description: 'Could not load some filter options from server.', variant: 'destructive' });\n      console.error(\"Error fetching filter data:\", error);\n    } finally {\n      setIsLoadingFilters(false);\n    }\n  }, [toast, showSiteFilter, showApproverFilter, showRequestorFilter, showTagFilter]);\n\n  useEffect(() => {\n    fetchFilterData();\n  }, [fetchFilterData]);\n\n  const handleApplyFilters = () => {\n    onFilterApply?.({\n      month: selectedMonth,\n      year: selectedYear,\n      siteId: showSiteFilter ? selectedSite : undefined,\n      approverId: showApproverFilter ? selectedApprover : undefined,\n      creatorUserId: showRequestorFilter ? selectedRequestor : undefined,\n      tagId: showTagFilter ? selectedTag : undefined,\n      driver: showDriverFilter ? driverName : undefined,\n      user: showUserFilter ? userNameFilter : undefined,\n      action: showActionTypeFilter ? actionTypeFilterText : undefined,\n      status: showStatusFilter ? selectedStatus : undefined,\n    });\n  };\n\n  return (\n    <div className=\"mb-6 flex flex-col gap-4 rounded-lg border bg-card p-4 shadow-sm sm:flex-row sm:items-end sm:flex-wrap\">\n      <div className=\"grid flex-1 gap-4 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5\">\n        <div>\n          <label htmlFor=\"month-filter\" className=\"mb-1 block text-sm font-medium text-card-foreground/80\">Month</label>\n          <Select value={selectedMonth} onValueChange={setSelectedMonth}>\n            <SelectTrigger id=\"month-filter\"><SelectValue placeholder=\"Select Month\" /></SelectTrigger>\n            <SelectContent>{monthsWithAll.map((month: FilterOption) => (<SelectItem key={month.value} value={month.value}>{month.label}</SelectItem>))}</SelectContent>\n          </Select>\n        </div>\n        <div>\n          <label htmlFor=\"year-filter\" className=\"mb-1 block text-sm font-medium text-card-foreground/80\">Year</label>\n          <Select value={selectedYear} onValueChange={setSelectedYear}>\n            <SelectTrigger id=\"year-filter\"><SelectValue placeholder=\"Select Year\" /></SelectTrigger>\n            <SelectContent>{yearsWithAll.map((year: FilterOption) => (<SelectItem key={year.value} value={year.value}>{year.label}</SelectItem>))}</SelectContent>\n          </Select>\n        </div>\n        {showSiteFilter && (\n          <div>\n            <label htmlFor=\"site-filter\" className=\"mb-1 block text-sm font-medium text-card-foreground/80\">Site</label>\n            <Select value={selectedSite} onValueChange={setSelectedSite} disabled={isLoadingFilters}>\n              <SelectTrigger id=\"site-filter\"><SelectValue placeholder={isLoadingFilters ? \"Loading sites...\" : \"Select Site\"} /></SelectTrigger>\n              <SelectContent>{sites.map((site: FilterOption) => (<SelectItem key={site.value} value={site.value}>{site.label}</SelectItem>))}</SelectContent>\n            </Select>\n          </div>\n        )}\n        {showApproverFilter && (\n          <div>\n            <label htmlFor=\"approver-filter\" className=\"mb-1 block text-sm font-medium text-card-foreground/80\">Approver</label>\n            <Select value={selectedApprover} onValueChange={setSelectedApprover} disabled={isLoadingFilters}>\n              <SelectTrigger id=\"approver-filter\"><SelectValue placeholder={isLoadingFilters ? \"Loading approvers...\" : \"Select Approver\"} /></SelectTrigger>\n              <SelectContent>{approvers.map((approver: FilterOption) => (<SelectItem key={approver.value} value={approver.value}>{approver.label}</SelectItem>))}</SelectContent>\n            </Select>\n          </div>\n        )}\n        {showRequestorFilter && (\n          <div>\n            <label htmlFor=\"requestor-filter\" className=\"mb-1 block text-sm font-medium text-card-foreground/80\">Requestor</label>\n            <Select value={selectedRequestor} onValueChange={setSelectedRequestor} disabled={isLoadingFilters}>\n              <SelectTrigger id=\"requestor-filter\"><SelectValue placeholder={isLoadingFilters ? \"Loading requestors...\" : \"Select Requestor\"} /></SelectTrigger>\n              <SelectContent>{requestors.map((requestor: FilterOption) => (<SelectItem key={requestor.value} value={requestor.value}>{requestor.label}</SelectItem>))}</SelectContent>\n            </Select>\n          </div>\n        )}\n        {showTagFilter && (\n            <div>\n                <label htmlFor=\"tag-filter\" className=\"mb-1 block text-sm font-medium text-card-foreground/80\">Tag</label>\n                <Select value={selectedTag} onValueChange={setSelectedTag} disabled={isLoadingFilters}>\n                    <SelectTrigger id=\"tag-filter\"><SelectValue placeholder={isLoadingFilters ? \"Loading tags...\" : \"Select Tag\"} /></SelectTrigger>\n                    <SelectContent>{tags.map((tag: FilterOption) => (<SelectItem key={tag.value} value={tag.value}>{tag.label}</SelectItem>))}</SelectContent>\n                </Select>\n            </div>\n        )}\n        {showDriverFilter && (\n            <div>\n                <label htmlFor=\"driver-filter\" className=\"mb-1 block text-sm font-medium text-card-foreground/80\">Driver Name</label>\n                <Input\n                    id=\"driver-filter\"\n                    placeholder=\"Enter driver name\"\n                    value={driverName}\n                    onChange={(e) => setDriverName(e.target.value)}\n                    disabled={isLoadingFilters}\n                />\n            </div>\n        )}\n        {showUserFilter && (\n          <div>\n            <label htmlFor=\"user-name-filter\" className=\"mb-1 block text-sm font-medium text-card-foreground/80\">Filter by User</label>\n            <Input\n                id=\"user-name-filter\"\n                placeholder=\"Enter user name...\"\n                value={userNameFilter}\n                onChange={(e) => setUserNameFilter(e.target.value)}\n                disabled={isLoadingFilters}\n            />\n          </div>\n        )}\n        {showActionTypeFilter && (\n          <div>\n            <label htmlFor=\"action-type-filter\" className=\"mb-1 block text-sm font-medium text-card-foreground/80\">Filter by Action</label>\n            <Input\n                id=\"action-type-filter\"\n                placeholder=\"e.g., Created, Approved...\"\n                value={actionTypeFilterText}\n                onChange={(e) => setActionTypeFilterText(e.target.value)}\n                disabled={isLoadingFilters}\n            />\n          </div>\n        )}\n        {showStatusFilter && statusOptions.length > 0 && (\n          <div>\n            <label htmlFor=\"status-filter\" className=\"mb-1 block text-sm font-medium text-card-foreground/80\">Status</label>\n            <Select value={selectedStatus} onValueChange={setSelectedStatus} disabled={isLoadingFilters}>\n              <SelectTrigger id=\"status-filter\"><SelectValue placeholder=\"Select Status\" /></SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"all\">All Statuses</SelectItem>\n                {statusOptions.map((option: FilterOption) => (\n                  <SelectItem key={option.value} value={option.value}>{option.label}</SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n          </div>\n        )}\n      </div>\n      <Button onClick={handleApplyFilters} className=\"mt-4 sm:mt-0 sm:self-end\" disabled={isLoadingFilters}>\n        {isLoadingFilters ? <Loader2 className=\"mr-2 h-4 w-4 animate-spin\"/> : <Filter className=\"mr-2 h-4 w-4\" />}\n        Apply Filters\n      </Button>\n    </div>\n  );\n}\n\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 962, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1043, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/analytics/po-cycle-time-chart.tsx"],"sourcesContent":["\n'use client';\n\nimport { useEffect, useState, useCallback } from 'react';\nimport { Bar, BarChart, CartesianGrid, Legend, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts';\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';\nimport type { ChartDataPoint } from '@/types';\nimport { Loader2, AlertTriangle, LineChart } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { useToast } from '@/hooks/use-toast';\n\ninterface POCycleTimeChartProps {\n  filters?: { month?: string; year?: string };\n}\n\nexport function POCycleTimeChart({ filters }: POCycleTimeChartProps) {\n  const [data, setData] = useState<ChartDataPoint[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const { toast } = useToast();\n\n  const fetchChartData = useCallback(async (currentFilters?: { month?: string; year?: string }) => {\n    setIsLoading(true);\n    setError(null);\n    const queryParams = new URLSearchParams();\n    if (currentFilters?.month && currentFilters.month !== 'all') queryParams.append('month', currentFilters.month);\n    if (currentFilters?.year && currentFilters.year !== 'all') queryParams.append('year', currentFilters.year);\n    \n    try {\n      const response = await fetch(`/api/charts/po-cycle-time?${queryParams.toString()}`);\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        throw new Error(errorData.error || 'Failed to fetch PO cycle time data');\n      }\n      const fetchedData: ChartDataPoint[] = await response.json();\n      setData(fetchedData);\n    } catch (err: any) {\n      setError(err.message || 'An unexpected error occurred.');\n      toast({\n        title: 'Error Loading Chart Data',\n        description: `Could not load PO cycle time: ${err.message}`,\n        variant: 'destructive',\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  }, [toast]);\n\n  useEffect(() => {\n    fetchChartData(filters);\n  }, [fetchChartData, filters]);\n\n  return (\n    <Card className=\"shadow-lg hover:shadow-xl hover:scale-[1.02] transition-all duration-300 ease-in-out\">\n      <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n        <CardTitle className=\"font-headline text-xl\">PO Cycle Time (Creation to Approval)</CardTitle>\n        <LineChart className=\"h-6 w-6 text-muted-foreground\" />\n      </CardHeader>\n      <CardContent>\n        <CardDescription className=\"mb-4\">\n          Distribution of time taken from PO creation to approval.\n        </CardDescription>\n        {isLoading ? (\n          <div className=\"flex flex-col justify-center items-center h-[300px]\">\n            <Loader2 className=\"h-10 w-10 animate-spin text-primary mb-3\" />\n            <p className=\"text-muted-foreground\">Loading chart data...</p>\n          </div>\n        ) : error ? (\n          <div className=\"flex flex-col justify-center items-center h-[300px] text-destructive p-4 border border-destructive/50 bg-destructive/10 rounded-md\">\n            <AlertTriangle className=\"h-10 w-10 mb-3\" />\n            <p className=\"font-semibold text-center mb-2\">Error loading chart data:</p>\n            <p className=\"text-sm text-center mb-4\">{error}</p>\n            <Button onClick={() => fetchChartData(filters)} variant=\"outline\" size=\"sm\" className=\"border-destructive text-destructive-foreground hover:bg-destructive/20\">\n              Try Again\n            </Button>\n          </div>\n        ) : data.length === 0 ? (\n           <div className=\"flex flex-col justify-center items-center h-[300px]\">\n            <p className=\"text-muted-foreground\">No cycle time data available for the selected period.</p>\n          </div>\n        ) : (\n          <ResponsiveContainer width=\"100%\" height={300}>\n            <BarChart data={data}>\n              <CartesianGrid strokeDasharray=\"3 3\" stroke=\"hsl(var(--border))\" />\n              <XAxis dataKey=\"name\" stroke=\"hsl(var(--foreground))\" fontSize={12} />\n              <YAxis stroke=\"hsl(var(--foreground))\" fontSize={12} allowDecimals={false} label={{ value: 'Number of POs', angle: -90, position: 'insideLeft', style: { textAnchor: 'middle', fontSize: '12px', fill: 'hsl(var(--muted-foreground))' } }} />\n              <Tooltip\n                contentStyle={{\n                  backgroundColor: 'hsl(var(--background))',\n                  borderColor: 'hsl(var(--border))',\n                  borderRadius: 'var(--radius)',\n                }}\n                labelStyle={{ color: 'hsl(var(--foreground))' }}\n                itemStyle={{ color: 'hsl(var(--chart-4))' }}\n                formatter={(value: number) => [value, 'PO Count']}\n              />\n              <Legend wrapperStyle={{ fontSize: '12px' }} />\n              <Bar dataKey=\"Count\" name=\"POs in Cycle Time Bucket\" fill=\"hsl(var(--chart-4))\" radius={[4, 4, 0, 0]} />\n            </BarChart>\n          </ResponsiveContainer>\n        )}\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1341, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/analytics/maverick-spend-chart.tsx"],"sourcesContent":["\n'use client';\n\nimport { useEffect, useState, useCallback } from 'react';\nimport { Bar, BarChart, CartesianGrid, ResponsiveContainer, Tooltip, XAxis, YAxis, Cell, Legend } from 'recharts';\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';\nimport type { ChartDataPoint } from '@/types';\nimport { Loader2, AlertTriangle, AlertOctagon, Brain } from 'lucide-react'; // Added Brain icon\nimport { Button } from '@/components/ui/button';\nimport { useToast } from '@/hooks/use-toast';\n\ninterface MaverickSpendChartProps {\n  filters?: { month?: string; year?: string };\n  refreshKey?: number;\n}\n\nconst COLORS = ['hsl(var(--chart-3))', 'hsl(var(--chart-5))']; // Different colors for value and count\n\nexport function MaverickSpendChart({ filters, refreshKey }: MaverickSpendChartProps) {\n  const [data, setData] = useState<ChartDataPoint[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const { toast } = useToast();\n\n  const fetchChartData = useCallback(async (currentFilters?: { month?: string; year?: string }) => {\n    setIsLoading(true);\n    setError(null);\n    const queryParams = new URLSearchParams();\n    if (currentFilters?.month && currentFilters.month !== 'all') queryParams.append('month', currentFilters.month);\n    if (currentFilters?.year && currentFilters.year !== 'all') queryParams.append('year', currentFilters.year);\n    \n    try {\n      const response = await fetch(`/api/charts/maverick-spend?${queryParams.toString()}`);\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        throw new Error(errorData.error || 'Failed to fetch maverick spend data');\n      }\n      const fetchedData: ChartDataPoint[] = await response.json();\n      setData(fetchedData);\n    } catch (err: any) {\n      setError(err.message || 'An unexpected error occurred.');\n      toast({\n        title: 'Error Loading Chart Data',\n        description: `Could not load maverick spend data: ${err.message}`,\n        variant: 'destructive',\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  }, [toast]);\n\n  useEffect(() => {\n    fetchChartData(filters);\n  }, [fetchChartData, filters, refreshKey]);\n\n  const formatValue = (value: number, name: string) => {\n    if (name.toLowerCase().includes('value')) {\n      return `${value.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 })} MZN`;\n    }\n    return value.toLocaleString();\n  };\n\n  return (\n    <Card className=\"shadow-lg hover:shadow-xl hover:scale-[1.02] transition-all duration-300 ease-in-out\">\n      <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n        <CardTitle className=\"font-headline text-xl\">Maverick Spend (Emergency POs)</CardTitle>\n        <AlertOctagon className=\"h-6 w-6 text-muted-foreground\" />\n      </CardHeader>\n      <CardContent>\n        <CardDescription className=\"mb-4\">\n          Value and count of POs with 'emergency' in notes. Full analysis via AI prompt below.\n        </CardDescription>\n        {isLoading ? (\n          <div className=\"flex flex-col justify-center items-center h-[300px]\">\n            <Loader2 className=\"h-10 w-10 animate-spin text-primary mb-3\" />\n            <p className=\"text-muted-foreground\">Loading chart data...</p>\n          </div>\n        ) : error ? (\n          <div className=\"flex flex-col justify-center items-center h-[300px] text-destructive p-4 border border-destructive/50 bg-destructive/10 rounded-md\">\n            <AlertTriangle className=\"h-10 w-10 mb-3\" />\n            <p className=\"font-semibold text-center mb-2\">Error loading chart data:</p>\n            <p className=\"text-sm text-center mb-4\">{error}</p>\n            <Button onClick={() => fetchChartData(filters)} variant=\"outline\" size=\"sm\" className=\"border-destructive text-destructive-foreground hover:bg-destructive/20\">\n              Try Again\n            </Button>\n          </div>\n        ) : data.length === 0 || data.every(d => d.value === 0) ? (\n           <div className=\"flex flex-col justify-center items-center h-[300px]\">\n            <p className=\"text-muted-foreground\">No emergency POs found for the selected period.</p>\n          </div>\n        ) : (\n          <ResponsiveContainer width=\"100%\" height={300}>\n            <BarChart data={data} layout=\"vertical\" barCategoryGap=\"20%\">\n              <CartesianGrid strokeDasharray=\"3 3\" stroke=\"hsl(var(--border))\" />\n              <XAxis type=\"number\" stroke=\"hsl(var(--foreground))\" fontSize={10} tickFormatter={(value) => value.toLocaleString()} />\n              <YAxis dataKey=\"name\" type=\"category\" stroke=\"hsl(var(--foreground))\" fontSize={10} width={150} interval={0} />\n              <Tooltip\n                contentStyle={{\n                  backgroundColor: 'hsl(var(--background))',\n                  borderColor: 'hsl(var(--border))',\n                  borderRadius: 'var(--radius)',\n                }}\n                labelStyle={{ color: 'hsl(var(--foreground))' }}\n                formatter={(value: number, name: string, props: any) => [formatValue(value, props.payload.name), props.payload.name.includes('Value') ? 'Total Value' : 'Count']}\n              />\n              <Bar dataKey=\"value\" name=\"Value/Count\">\n                {data.map((entry, index) => (\n                  <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} radius={[0, 4, 4, 0]} />\n                ))}\n              </Bar>\n            </BarChart>\n          </ResponsiveContainer>\n        )}\n        <Card className=\"mt-4 text-left text-xs bg-background/50\">\n            <CardHeader className=\"p-2\"><CardTitle className=\"text-xs font-semibold flex items-center\"><Brain className=\"h-3 w-3 mr-1 text-primary\" /> AI Prompt Example</CardTitle></CardHeader>\n            <CardContent className=\"p-2\"><code className=\"block whitespace-pre-wrap\">Show all POs from last quarter with 'emergency' in their notes, OR not linked to a requisition. What's their total value and which suppliers are most common? Highlight any over $500.</code></CardContent>\n        </Card>\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1692, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/analytics/po-value-distribution-chart.tsx"],"sourcesContent":["\n'use client';\n\nimport { useEffect, useState, useCallback } from 'react';\nimport { Bar, BarChart, CartesianGrid, Legend, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts';\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';\nimport type { ChartDataPoint } from '@/types';\nimport { Loader2, AlertTriangle, CircleDollarSign, Brain } from 'lucide-react'; // Added Brain\nimport { Button } from '@/components/ui/button';\nimport { useToast } from '@/hooks/use-toast';\n\ninterface POValueDistributionChartProps {\n  filters?: { month?: string; year?: string };\n  refreshKey?: number; // Added refreshKey\n}\n\nexport function POValueDistributionChart({ filters, refreshKey }: POValueDistributionChartProps) { // Added refreshKey\n  const [data, setData] = useState<ChartDataPoint[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const { toast } = useToast();\n\n  const fetchChartData = useCallback(async (currentFilters?: { month?: string; year?: string }) => {\n    setIsLoading(true);\n    setError(null);\n    const queryParams = new URLSearchParams();\n    if (currentFilters?.month && currentFilters.month !== 'all') queryParams.append('month', currentFilters.month);\n    if (currentFilters?.year && currentFilters.year !== 'all') queryParams.append('year', currentFilters.year);\n    \n    try {\n      const response = await fetch(`/api/charts/po-value-distribution?${queryParams.toString()}`);\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        throw new Error(errorData.error || 'Failed to fetch PO value distribution data');\n      }\n      const fetchedData: ChartDataPoint[] = await response.json();\n      setData(fetchedData);\n    } catch (err: any) {\n      setError(err.message || 'An unexpected error occurred.');\n      toast({\n        title: 'Error Loading Chart Data',\n        description: `Could not load PO value distribution: ${err.message}`,\n        variant: 'destructive',\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  }, [toast]);\n\n  useEffect(() => {\n    fetchChartData(filters);\n  }, [fetchChartData, filters, refreshKey]); // Added refreshKey to dependencies\n\n  return (\n    <Card className=\"shadow-lg hover:shadow-xl hover:scale-[1.02] transition-all duration-300 ease-in-out\">\n      <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n        <CardTitle className=\"font-headline text-xl\">PO Value Distribution</CardTitle>\n        <CircleDollarSign className=\"h-6 w-6 text-muted-foreground\" />\n      </CardHeader>\n      <CardContent>\n        <CardDescription className=\"mb-4\">\n          Number of Purchase Orders in different value ranges (MZN).\n        </CardDescription>\n        {isLoading ? (\n          <div className=\"flex flex-col justify-center items-center h-[300px]\">\n            <Loader2 className=\"h-10 w-10 animate-spin text-primary mb-3\" />\n            <p className=\"text-muted-foreground\">Loading chart data...</p>\n          </div>\n        ) : error ? (\n          <div className=\"flex flex-col justify-center items-center h-[300px] text-destructive p-4 border border-destructive/50 bg-destructive/10 rounded-md\">\n            <AlertTriangle className=\"h-10 w-10 mb-3\" />\n            <p className=\"font-semibold text-center mb-2\">Error loading chart data:</p>\n            <p className=\"text-sm text-center mb-4\">{error}</p>\n            <Button onClick={() => fetchChartData(filters)} variant=\"outline\" size=\"sm\" className=\"border-destructive text-destructive-foreground hover:bg-destructive/20\">\n              Try Again\n            </Button>\n          </div>\n        ) : data.length === 0 || data.every(d => d.Count === 0) ? (\n           <div className=\"flex flex-col justify-center items-center h-[300px]\">\n            <p className=\"text-muted-foreground\">No PO data available for distribution in the selected period.</p>\n          </div>\n        ) : (\n          <ResponsiveContainer width=\"100%\" height={300}>\n            <BarChart data={data}>\n              <CartesianGrid strokeDasharray=\"3 3\" stroke=\"hsl(var(--border))\" />\n              <XAxis dataKey=\"name\" stroke=\"hsl(var(--foreground))\" fontSize={10} interval={0} angle={-20} textAnchor=\"end\" height={50} />\n              <YAxis stroke=\"hsl(var(--foreground))\" fontSize={12} allowDecimals={false} label={{ value: 'Number of POs', angle: -90, position: 'insideLeft', style: { textAnchor: 'middle', fontSize: '12px', fill: 'hsl(var(--muted-foreground))' } }} />\n              <Tooltip\n                contentStyle={{\n                  backgroundColor: 'hsl(var(--background))',\n                  borderColor: 'hsl(var(--border))',\n                  borderRadius: 'var(--radius)',\n                }}\n                labelStyle={{ color: 'hsl(var(--foreground))' }}\n                itemStyle={{ color: 'hsl(var(--chart-3))' }} // Using chart-3 color\n                formatter={(value: number) => [value, 'PO Count']}\n              />\n              <Legend wrapperStyle={{ fontSize: '12px' }} />\n              <Bar dataKey=\"Count\" name=\"POs in Bucket\" fill=\"hsl(var(--chart-3))\" radius={[4, 4, 0, 0]} />\n            </BarChart>\n          </ResponsiveContainer>\n        )}\n         <Card className=\"mt-4 text-left text-xs bg-background/50\">\n            <CardHeader className=\"p-2\"><CardTitle className=\"text-xs font-semibold flex items-center\"><Brain className=\"h-3 w-3 mr-1 text-primary\" /> AI Prompt Example</CardTitle></CardHeader>\n            <CardContent className=\"p-2\"><code className=\"block whitespace-pre-wrap\">{`Generate a histogram of PO grand total values for the current fiscal year, grouped into these buckets: 0-500, 501-2000, 2001-10000, 10001-50000, 50001+. What percentage of POs fall into each bucket?`}</code></CardContent>\n        </Card>\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2044, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/analytics/grn-value-chart.tsx"],"sourcesContent":["\n'use client';\n\nimport { useEffect, useState, useCallback } from 'react';\nimport { Bar, BarChart, CartesianGrid, Legend, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts';\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';\nimport type { ChartDataPoint } from '@/types';\nimport { Loader2, AlertTriangle, BarChartHorizontalBig } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { useToast } from '@/hooks/use-toast';\n\ninterface GrnValueChartProps {\n  filters?: { month?: string; year?: string; siteId?: string; };\n  refreshKey?: number;\n}\n\nexport function GrnValueChart({ filters, refreshKey }: GrnValueChartProps) {\n  const [data, setData] = useState<ChartDataPoint[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const { toast } = useToast();\n\n  const fetchChartData = useCallback(async (currentFilters?: { month?: string; year?: string; siteId?: string; }) => {\n    setIsLoading(true);\n    setError(null);\n    const queryParams = new URLSearchParams();\n    if (currentFilters?.month && currentFilters.month !== 'all') queryParams.append('month', currentFilters.month);\n    if (currentFilters?.year && currentFilters.year !== 'all') queryParams.append('year', currentFilters.year);\n    if (currentFilters?.siteId && currentFilters.siteId !== 'all') queryParams.append('siteId', currentFilters.siteId);\n    \n    try {\n      const response = await fetch(`/api/charts/grn-value-over-time?${queryParams.toString()}`);\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        throw new Error(errorData.error || 'Failed to fetch GRN value data');\n      }\n      const fetchedData: ChartDataPoint[] = await response.json();\n      setData(fetchedData);\n    } catch (err: any) {\n      setError(err.message || 'An unexpected error occurred.');\n      toast({\n        title: 'Error Loading Chart Data',\n        description: `Could not load GRN value data: ${err.message}`,\n        variant: 'destructive',\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  }, [toast]);\n\n  useEffect(() => {\n    fetchChartData(filters);\n  }, [fetchChartData, filters, refreshKey]);\n\n  const formatCurrency = (value: number) => {\n    if (value === undefined || value === null) return 'MZN 0';\n    return value.toLocaleString('en-US', { style: 'currency', currency: 'MZN', minimumFractionDigits: 0, maximumFractionDigits: 0 });\n  };\n\n  return (\n    <Card className=\"shadow-lg hover:shadow-xl hover:scale-[1.02] transition-all duration-300 ease-in-out\">\n      <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n        <CardTitle className=\"font-headline text-xl\">Value of Goods Received Over Time</CardTitle>\n        <BarChartHorizontalBig className=\"h-6 w-6 text-muted-foreground\" />\n      </CardHeader>\n      <CardContent>\n        <CardDescription className=\"mb-4\">\n          Total value of received items per month (based on PO approval date).\n        </CardDescription>\n        {isLoading ? (\n          <div className=\"flex flex-col justify-center items-center h-[300px]\">\n            <Loader2 className=\"h-10 w-10 animate-spin text-primary mb-3\" />\n            <p className=\"text-muted-foreground\">Loading chart data...</p>\n          </div>\n        ) : error ? (\n          <div className=\"flex flex-col justify-center items-center h-[300px] text-destructive p-4 border border-destructive/50 bg-destructive/10 rounded-md\">\n            <AlertTriangle className=\"h-10 w-10 mb-3\" />\n            <p className=\"font-semibold text-center mb-2\">Error loading chart data:</p>\n            <p className=\"text-sm text-center mb-4\">{error}</p>\n            <Button onClick={() => fetchChartData(filters)} variant=\"outline\" size=\"sm\" className=\"border-destructive text-destructive-foreground hover:bg-destructive/20\">\n              Try Again\n            </Button>\n          </div>\n        ) : data.length === 0 ? (\n           <div className=\"flex flex-col justify-center items-center h-[300px]\">\n            <p className=\"text-muted-foreground\">No goods received data found for the selected period.</p>\n          </div>\n        ) : (\n          <ResponsiveContainer width=\"100%\" height={300}>\n            <BarChart data={data}>\n              <CartesianGrid strokeDasharray=\"3 3\" stroke=\"hsl(var(--border))\" />\n              <XAxis dataKey=\"name\" stroke=\"hsl(var(--foreground))\" fontSize={12} />\n              <YAxis stroke=\"hsl(var(--foreground))\" fontSize={12} tickFormatter={formatCurrency} />\n              <Tooltip\n                contentStyle={{\n                  backgroundColor: 'hsl(var(--background))',\n                  borderColor: 'hsl(var(--border))',\n                  borderRadius: 'var(--radius)',\n                }}\n                labelStyle={{ color: 'hsl(var(--foreground))' }}\n                itemStyle={{ color: 'hsl(var(--chart-5))' }}\n                formatter={(value: number) => [formatCurrency(value), 'Received Value']}\n              />\n              <Legend wrapperStyle={{ fontSize: '12px' }} />\n              <Bar dataKey=\"value\" name=\"Received Value (MZN)\" fill=\"hsl(var(--chart-5))\" radius={[4, 4, 0, 0]} />\n            </BarChart>\n          </ResponsiveContainer>\n        )}\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2343, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/analytics/fuel-cost-by-tag-chart.tsx"],"sourcesContent":["\n'use client';\n\nimport { useEffect, useState, useCallback } from 'react';\nimport { Bar, BarChart, CartesianGrid, Legend, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts';\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';\nimport type { ChartDataPoint } from '@/types';\nimport { Loader2, AlertTriangle, CircleDollarSign } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { useToast } from '@/hooks/use-toast';\n\ninterface FuelCostByTagChartProps {\n  filters?: { month?: string; year?: string; siteId?: string; };\n  refreshKey?: number;\n}\n\nexport function FuelCostByTagChart({ filters, refreshKey }: FuelCostByTagChartProps) {\n  const [data, setData] = useState<ChartDataPoint[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const { toast } = useToast();\n\n  const fetchChartData = useCallback(async (currentFilters?: { month?: string; year?: string; siteId?: string; }) => {\n    setIsLoading(true);\n    setError(null);\n    const queryParams = new URLSearchParams();\n    if (currentFilters?.month && currentFilters.month !== 'all') queryParams.append('month', currentFilters.month);\n    if (currentFilters?.year && currentFilters.year !== 'all') queryParams.append('year', currentFilters.year);\n    if (currentFilters?.siteId && currentFilters.siteId !== 'all') queryParams.append('siteId', currentFilters.siteId);\n    \n    try {\n      const response = await fetch(`/api/charts/fuel-cost-by-tag?${queryParams.toString()}`);\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        throw new Error(errorData.error || 'Failed to fetch fuel cost data');\n      }\n      const fetchedData: ChartDataPoint[] = await response.json();\n      setData(fetchedData);\n    } catch (err: any) {\n      setError(err.message || 'An unexpected error occurred.');\n      toast({\n        title: 'Error Loading Chart Data',\n        description: `Could not load fuel cost data: ${err.message}`,\n        variant: 'destructive',\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  }, [toast]);\n\n  useEffect(() => {\n    fetchChartData(filters);\n  }, [fetchChartData, filters, refreshKey]);\n\n  const formatCurrency = (value: number) => {\n    if (value === undefined || value === null) return 'MZN 0';\n    return value.toLocaleString('en-US', { style: 'currency', currency: 'MZN', minimumFractionDigits: 0, maximumFractionDigits: 0 });\n  };\n\n  return (\n    <Card className=\"shadow-lg hover:shadow-xl hover:scale-[1.02] transition-all duration-300 ease-in-out\">\n      <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n        <CardTitle className=\"font-headline text-xl\">Total Fuel Cost per Tag/Site</CardTitle>\n        <CircleDollarSign className=\"h-6 w-6 text-muted-foreground\" />\n      </CardHeader>\n      <CardContent>\n        <CardDescription className=\"mb-4\">\n          Fuel expenditure for each vehicle/equipment over time.\n        </CardDescription>\n        {isLoading ? (\n          <div className=\"flex flex-col justify-center items-center h-[300px]\">\n            <Loader2 className=\"h-10 w-10 animate-spin text-primary mb-3\" />\n            <p className=\"text-muted-foreground\">Loading chart data...</p>\n          </div>\n        ) : error ? (\n          <div className=\"flex flex-col justify-center items-center h-[300px] text-destructive p-4 border border-destructive/50 bg-destructive/10 rounded-md\">\n            <AlertTriangle className=\"h-10 w-10 mb-3\" />\n            <p className=\"font-semibold text-center mb-2\">Error loading chart data:</p>\n            <p className=\"text-sm text-center mb-4\">{error}</p>\n            <Button onClick={() => fetchChartData(filters)} variant=\"outline\" size=\"sm\" className=\"border-destructive text-destructive-foreground hover:bg-destructive/20\">\n              Try Again\n            </Button>\n          </div>\n        ) : data.length === 0 ? (\n           <div className=\"flex flex-col justify-center items-center h-[300px]\">\n            <p className=\"text-muted-foreground\">No fuel cost data found for the selected period.</p>\n          </div>\n        ) : (\n          <ResponsiveContainer width=\"100%\" height={300}>\n            <BarChart data={data} layout=\"vertical\" barSize={20}>\n              <CartesianGrid strokeDasharray=\"3 3\" stroke=\"hsl(var(--border))\" />\n              <XAxis type=\"number\" stroke=\"hsl(var(--foreground))\" fontSize={10} tickFormatter={formatCurrency} />\n              <YAxis dataKey=\"name\" type=\"category\" stroke=\"hsl(var(--foreground))\" fontSize={10} width={80} interval={0} />\n              <Tooltip\n                contentStyle={{ backgroundColor: 'hsl(var(--background))', borderColor: 'hsl(var(--border))', borderRadius: 'var(--radius)'}}\n                labelStyle={{ color: 'hsl(var(--foreground))' }}\n                itemStyle={{ color: 'hsl(var(--chart-4))' }}\n                formatter={(value: number) => [formatCurrency(value), 'Total Cost']}\n              />\n              <Legend wrapperStyle={{ fontSize: '12px' }} />\n              <Bar dataKey=\"value\" name=\"Total Cost\" fill=\"hsl(var(--chart-4))\" radius={[0, 4, 4, 0]} />\n            </BarChart>\n          </ResponsiveContainer>\n        )}\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2648, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,OAAO,gKAAA,CAAA,OAAkB;AAE/B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,OAAkB;QACjB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8FACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG,gKAAA,CAAA,OAAkB,CAAC,WAAW;AAErD,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,uYACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,gKAAA,CAAA,UAAqB,CAAC,WAAW;AAE3D,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,mIACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,gKAAA,CAAA,UAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 2701, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 2729, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/analytics/page.tsx"],"sourcesContent":["\n'use client';\n\nimport { FilterBar } from '@/components/shared/filter-bar';\nimport { POCycleTimeChart } from '@/components/analytics/po-cycle-time-chart';\nimport { MaverickSpendChart } from '@/components/analytics/maverick-spend-chart';\nimport { POValueDistributionChart } from '@/components/analytics/po-value-distribution-chart';\nimport { GrnValueChart } from '@/components/analytics/grn-value-chart';\nimport { FuelCostByTagChart } from '@/components/analytics/fuel-cost-by-tag-chart'; // New import\nimport { useState, useEffect } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { \n    ShoppingCart, Truck, FileText as QuoteIcon, ClipboardList as RequisitionIcon, Fuel as FuelIcon, \n    Brain, LineChart, CircleDollarSign, AlertOctagon, Users, TrendingUp, \n    BarChartHorizontalBig, PackageCheck, PackageX, Percent, Hourglass, AlertTriangle as AlertTriangleIcon,\n    MessageSquare, Sparkles, Send, Loader2\n} from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Textarea } from '@/components/ui/textarea';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport type { POAnalysisOutput } from '@/ai/flows/po-analysis-flow';\nimport { useToast } from '@/hooks/use-toast';\n\nexport default function AnalyticsPage() {\n  const [currentFilters, setCurrentFilters] = useState<{ month?: string; year?: string; siteId?: string; }>({\n    month: (new Date().getMonth() + 1).toString().padStart(2, '0'),\n    year: new Date().getFullYear().toString(),\n    siteId: 'all',\n  });\n  const [refreshKey, setRefreshKey] = useState(0); \n\n  const [aiPrompt, setAiPrompt] = useState<string>('');\n  const [aiResponse, setAiResponse] = useState<POAnalysisOutput | null>(null);\n  const [isAiLoading, setIsAiLoading] = useState<boolean>(false);\n  const [aiError, setAiError] = useState<string | null>(null);\n  const { toast } = useToast();\n\n\n  const handleFilterApply = (filters: any) => {\n    console.log('Applying filters to Analytics:', filters);\n    setCurrentFilters({ month: filters.month, year: filters.year, siteId: filters.siteId });\n    setRefreshKey(prevKey => prevKey + 1); \n  };\n\n  const handleAiSubmit = async () => {\n    if (!aiPrompt.trim()) {\n      toast({title: \"Prompt Required\", description: \"Please enter a question or request for the AI.\", variant: \"default\"});\n      return;\n    }\n    setIsAiLoading(true);\n    setAiResponse(null);\n    setAiError(null);\n    try {\n      const response = await fetch('/api/ai/analyze-po', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ prompt: aiPrompt }),\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error(\"AI API Error Response Text:\", errorText);\n        try {\n          const errorData = JSON.parse(errorText);\n          const specificError = errorData.details || errorData.error || `AI analysis failed with status: ${response.status}`;\n          throw new Error(specificError);\n        } catch (e) {\n           throw new Error(`AI analysis failed: ${response.statusText}. The server returned a non-JSON response, which may indicate a server crash.`);\n        }\n      }\n      const data: POAnalysisOutput = await response.json();\n      setAiResponse(data);\n    } catch (error: any) {\n      setAiError(error.message || 'Failed to get response from AI.');\n      toast({title: \"AI Analysis Error\", description: error.message, variant: \"destructive\"});\n    } finally {\n      setIsAiLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <FilterBar \n        onFilterApply={handleFilterApply}\n        showApproverFilter={false}\n        showRequestorFilter={false}\n        showSiteFilter={true} \n      />\n\n      <Tabs defaultValue=\"po-analytics\" className=\"w-full\">\n        <TabsList className=\"grid w-full grid-cols-2 sm:grid-cols-3 md:grid-cols-5 gap-2 mb-6\">\n          <TabsTrigger value=\"po-analytics\" className=\"flex items-center gap-2\">\n            <ShoppingCart className=\"h-4 w-4\" /> PO Analytics\n          </TabsTrigger>\n          <TabsTrigger value=\"grn-analytics\" className=\"flex items-center gap-2\">\n            <Truck className=\"h-4 w-4\" /> GRN Analytics\n          </TabsTrigger>\n          <TabsTrigger value=\"quote-analytics\" className=\"flex items-center gap-2\">\n            <QuoteIcon className=\"h-4 w-4\" /> Client Quotes\n          </TabsTrigger>\n          <TabsTrigger value=\"requisition-analytics\" className=\"flex items-center gap-2\">\n            <RequisitionIcon className=\"h-4 w-4\" /> Requisitions\n          </TabsTrigger>\n          <TabsTrigger value=\"fuel-analytics\" className=\"flex items-center gap-2\">\n            <FuelIcon className=\"h-4 w-4\" /> Fuel Usage\n          </TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"po-analytics\">\n          <section className=\"grid gap-6 lg:grid-cols-1 xl:grid-cols-2\">\n            <Card className=\"shadow-lg hover:shadow-xl transition-all duration-300 ease-in-out\">\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"font-headline text-xl\">AI-Powered PO Analysis</CardTitle>\n                <MessageSquare className=\"h-6 w-6 text-muted-foreground\" />\n              </CardHeader>\n              <CardContent>\n                <CardDescription className=\"mb-2\">\n                  Ask the AI for specific insights into your Purchase Order data. The AI can generate summaries, identify trends, and even create charts based on your questions.\n                </CardDescription>\n                <div className=\"p-3 border-2 border-dashed border-muted-foreground/30 rounded-lg bg-muted/10 mb-4\">\n                  <h4 className=\"text-sm font-semibold text-foreground mb-1\">Example Prompt:</h4>\n                  <code className=\"block whitespace-pre-wrap text-xs bg-background/50 p-2 rounded\">\n                    {`What was the total value of approved POs last month? Show me a breakdown by supplier.`}\n                  </code>\n                </div>\n                <div className=\"space-y-2\">\n                  <Textarea\n                    placeholder=\"Enter your question, e.g., 'Top 5 suppliers by PO value this year?' or 'How many POs are pending approval?'\"\n                    value={aiPrompt}\n                    onChange={(e) => setAiPrompt(e.target.value)}\n                    className=\"min-h-[100px]\"\n                    disabled={isAiLoading}\n                  />\n                  <Button onClick={handleAiSubmit} disabled={isAiLoading || !aiPrompt.trim()} className=\"w-full\">\n                    {isAiLoading ? <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" /> : <Send className=\"mr-2 h-4 w-4\" />}\n                    {isAiLoading ? 'Analyzing...' : 'Ask AI'}\n                  </Button>\n                </div>\n              </CardContent>\n            </Card>\n\n            <Card className=\"shadow-lg hover:shadow-xl transition-all duration-300 ease-in-out flex flex-col\">\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"font-headline text-xl\">AI Response</CardTitle>\n                <Sparkles className=\"h-6 w-6 text-muted-foreground\" />\n              </CardHeader>\n              <CardContent className=\"flex-grow flex flex-col\">\n                {isAiLoading ? (\n                  <div className=\"flex-grow flex flex-col justify-center items-center text-muted-foreground\">\n                    <Loader2 className=\"h-10 w-10 animate-spin text-primary mb-3\" />\n                    <p>AI is thinking...</p>\n                  </div>\n                ) : aiError ? (\n                  <div className=\"flex-grow flex flex-col justify-center items-center text-destructive p-4 border border-destructive/50 rounded-md\">\n                    <AlertTriangleIcon className=\"h-10 w-10 mb-3\" />\n                    <p className=\"font-semibold\">Error:</p>\n                    <p className=\"text-sm text-center\">{aiError}</p>\n                  </div>\n                ) : aiResponse ? (\n                  <div className=\"space-y-4\">\n                    <div className=\"p-3 border rounded-md bg-background/50\">\n                      <h4 className=\"font-semibold mb-1 text-primary\">Summary:</h4>\n                      <p className=\"text-sm whitespace-pre-wrap\">{aiResponse.responseText}</p>\n                    </div>\n                    {aiResponse.chartData && aiResponse.chartData.length > 0 && (\n                      <div className=\"p-3 border rounded-md bg-background/50\">\n                        <h4 className=\"font-semibold mb-2 text-primary\">{aiResponse.chartTitle || 'Chart'}</h4>\n                        <ResponsiveContainer width=\"100%\" height={250}>\n                          <BarChart data={aiResponse.chartData}>\n                            <CartesianGrid strokeDasharray=\"3 3\" stroke=\"hsl(var(--border))\" />\n                            <XAxis dataKey=\"name\" stroke=\"hsl(var(--foreground))\" fontSize={10} interval={0} angle={-30} textAnchor=\"end\" height={50}/>\n                            <YAxis stroke=\"hsl(var(--foreground))\" fontSize={10} />\n                            <Tooltip\n                              contentStyle={{ backgroundColor: 'hsl(var(--background))', borderColor: 'hsl(var(--border))', borderRadius: 'var(--radius)'}}\n                              labelStyle={{ color: 'hsl(var(--foreground))' }}\n                              itemStyle={{ color: 'hsl(var(--chart-1))' }}\n                            />\n                            <Bar dataKey=\"value\" fill=\"hsl(var(--chart-1))\" radius={[4, 4, 0, 0]} />\n                          </BarChart>\n                        </ResponsiveContainer>\n                      </div>\n                    )}\n                    {aiResponse.debugInfo && (\n                        <div className=\"mt-2 p-2 border border-dashed border-muted-foreground/30 rounded-md text-xs text-muted-foreground\">\n                            <p className=\"font-semibold\">Debug Info:</p>\n                            <pre className=\"whitespace-pre-wrap text-xs\">{aiResponse.debugInfo}</pre>\n                        </div>\n                    )}\n                  </div>\n                ) : (\n                  <div className=\"flex-grow flex flex-col justify-center items-center text-muted-foreground\">\n                    <Brain className=\"h-10 w-10 mb-3\" />\n                    <p>AI's response will appear here.</p>\n                  </div>\n                )}\n              </CardContent>\n            </Card>\n            \n            <POCycleTimeChart key={`po-cycle-${refreshKey}`} filters={currentFilters} />\n            <MaverickSpendChart key={`maverick-spend-${refreshKey}`} filters={currentFilters} /> \n            <POValueDistributionChart key={`po-value-dist-${refreshKey}`} filters={currentFilters} />\n\n            <Card className=\"shadow-lg hover:shadow-xl hover:scale-[1.02] transition-all duration-300 ease-in-out\">\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"font-headline text-xl\">PO Status Trends Over Time</CardTitle>\n                <TrendingUp className=\"h-6 w-6 text-muted-foreground\" />\n              </CardHeader>\n              <CardContent>\n                <CardDescription className=\"mb-4\">\n                  The \"Monthly PO Status\" chart on the main Dashboard page shows trends for 'Approved' and 'Pending Approval' POs. For more detailed status trends (e.g., including Draft, Completed, Rejected), use the AI analysis tool.\n                </CardDescription>\n                 <div className=\"p-4 text-center border-2 border-dashed border-muted-foreground/50 rounded-lg bg-muted/20\">\n                  <h3 className=\"text-md font-semibold text-foreground mb-1\">Detailed Analysis via AI</h3>\n                  <p className=\"text-xs text-muted-foreground mb-2\">Use the AI prompt to explore trends across all PO statuses or correlate with other factors.</p>\n                  <Card className=\"mt-1 text-left text-xs bg-background/50\">\n                    <CardHeader className=\"p-2\"><CardTitle className=\"text-xs font-semibold flex items-center\"><Brain className=\"h-3 w-3 mr-1 text-primary\" /> AI Prompt Example</CardTitle></CardHeader>\n                    <CardContent className=\"p-2\"><code className=\"block whitespace-pre-wrap\">{`Show the monthly trend of all PO statuses (Draft, Pending Approval, Approved, Rejected, Completed) for the last 6 months. Is there an increasing backlog of pending approvals?`}</code></CardContent>\n                  </Card>\n                </div>\n              </CardContent>\n            </Card>\n          </section>\n        </TabsContent>\n\n        <TabsContent value=\"grn-analytics\">\n           <section className=\"grid gap-6 lg:grid-cols-1 xl:grid-cols-2\">\n            <Card className=\"shadow-lg hover:shadow-xl hover:scale-[1.02] transition-all duration-300 ease-in-out\">\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"font-headline text-xl\">Supplier On-Time Delivery</CardTitle>\n                <PackageCheck className=\"h-6 w-6 text-muted-foreground\" />\n              </CardHeader>\n              <CardContent>\n                <CardDescription className=\"mb-4\">\n                  Percentage of PO items delivered on or before the promised date by supplier.\n                </CardDescription>\n                <div className=\"p-4 text-center border-2 border-dashed border-muted-foreground/50 rounded-lg bg-muted/20\">\n                  <h3 className=\"text-md font-semibold text-foreground mb-1\">Analysis Requires More Data</h3>\n                  <p className=\"text-xs text-muted-foreground mb-2\">This analysis requires `Expected Delivery Date` on PO items and `Actual Receipt Date` on GRNs, which are not yet in the database schema.</p>\n                  <Card className=\"mt-1 text-left text-xs bg-background/50\">\n                    <CardHeader className=\"p-2\"><CardTitle className=\"text-xs font-semibold flex items-center\"><Brain className=\"h-3 w-3 mr-1 text-primary\" /> AI Prompt Example</CardTitle></CardHeader>\n                    <CardContent className=\"p-2\"><code className=\"block whitespace-pre-wrap\">{`For supplier [Supplier Name] over the last quarter, calculate their on-time delivery percentage. List top 3 suppliers by on-time delivery rate.`}</code></CardContent>\n                  </Card>\n                </div>\n              </CardContent>\n            </Card>\n            <Card className=\"shadow-lg hover:shadow-xl hover:scale-[1.02] transition-all duration-300 ease-in-out\">\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"font-headline text-xl\">Receipt Discrepancy Rate</CardTitle>\n                <PackageX className=\"h-6 w-6 text-muted-foreground\" />\n              </CardHeader>\n              <CardContent>\n                <CardDescription className=\"mb-4\">\n                  Percentage of items received with quantity mismatches (short/over) or quality issues.\n                </CardDescription>\n                <div className=\"p-4 text-center border-2 border-dashed border-muted-foreground/50 rounded-lg bg-muted/20\">\n                   <h3 className=\"text-md font-semibold text-foreground mb-1\">Analysis Requires More Data</h3>\n                   <p className=\"text-xs text-muted-foreground mb-2\">Requires structured data for rejection reasons on GRNs (e.g., 'Damaged', 'Wrong Item'), which is not yet in the database schema.</p>\n                  <Card className=\"mt-1 text-left text-xs bg-background/50\">\n                    <CardHeader className=\"p-2\"><CardTitle className=\"text-xs font-semibold flex items-center\"><Brain className=\"h-3 w-3 mr-1 text-primary\" /> AI Prompt Example</CardTitle></CardHeader>\n                    <CardContent className=\"p-2\"><code className=\"block whitespace-pre-wrap\">{`Analyze GRNs for item [Item SKU] from last month. What's the discrepancy rate (ordered vs. received quantity)? What are the most common reasons if items were rejected?`}</code></CardContent>\n                  </Card>\n                </div>\n              </CardContent>\n            </Card>\n             <Card className=\"shadow-lg hover:shadow-xl hover:scale-[1.02] transition-all duration-300 ease-in-out\">\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"font-headline text-xl\">Average GRN Processing Time</CardTitle>\n                <Hourglass className=\"h-6 w-6 text-muted-foreground\" />\n              </CardHeader>\n              <CardContent>\n                <CardDescription className=\"mb-4\">\n                  Time from physical receipt of goods to system entry/update of the GRN.\n                </CardDescription>\n                <div className=\"p-4 text-center border-2 border-dashed border-muted-foreground/50 rounded-lg bg-muted/20\">\n                   <h3 className=\"text-md font-semibold text-foreground mb-1\">Analysis Requires More Data</h3>\n                   <p className=\"text-xs text-muted-foreground mb-2\">Requires capturing 'Physical Receipt Date' on GRNs, which is not yet in the database schema. The system entry date can be derived from the Activity Log.</p>\n                  <Card className=\"mt-1 text-left text-xs bg-background/50\">\n                    <CardHeader className=\"p-2\"><CardTitle className=\"text-xs font-semibold flex items-center\"><Brain className=\"h-3 w-3 mr-1 text-primary\" /> AI Prompt Example</CardTitle></CardHeader>\n                    <CardContent className=\"p-2\"><code className=\"block whitespace-pre-wrap\">{`What's the average GRN processing time (physical receipt to system entry) for the receiving team at [Site Name] over the past month? Identify any GRNs that took significantly longer.`}</code></CardContent>\n                  </Card>\n                </div>\n              </CardContent>\n            </Card>\n            <GrnValueChart key={`grn-value-${refreshKey}`} filters={currentFilters} />\n          </section>\n        </TabsContent>\n\n        <TabsContent value=\"quote-analytics\">\n          <section className=\"grid gap-6 lg:grid-cols-1 xl:grid-cols-2\">\n            <Card className=\"shadow-lg hover:shadow-xl hover:scale-[1.02] transition-all duration-300 ease-in-out\">\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"font-headline text-xl\">Quote Conversion Rate</CardTitle>\n                <Percent className=\"h-6 w-6 text-muted-foreground\" />\n              </CardHeader>\n              <CardContent>\n                <CardDescription className=\"mb-4\">\n                  Percentage of quotes approved vs. total quotes issued. (Chart: Grouped Bar chart)\n                </CardDescription>\n                <div className=\"p-4 text-center border-2 border-dashed border-muted-foreground/50 rounded-lg bg-muted/20\">\n                  <h3 className=\"text-md font-semibold text-foreground mb-1\">Analysis Requires More Data</h3>\n                  <p className=\"text-xs text-muted-foreground mb-2\">This analysis requires `Quote` status data and potentially a link between Quotes and final Purchase Orders to determine a \"win\". The AI would need a new tool to access Quote data.</p>\n                  <Card className=\"mt-1 text-left text-xs bg-background/50\">\n                      <CardHeader className=\"p-2\"><CardTitle className=\"text-xs font-semibold flex items-center\"><Brain className=\"h-3 w-3 mr-1 text-primary\" /> AI Prompt Example</CardTitle></CardHeader>\n                      <CardContent className=\"p-2\"><code className=\"block whitespace-pre-wrap\">{`What is our overall quote conversion rate (status 'Approved' / total 'Sent' or 'Approved' or 'Rejected') for last month? Break this down by client [Client Name] and by creator [Creator Email].`}</code></CardContent>\n                  </Card>\n                </div>\n              </CardContent>\n            </Card>\n            <Card className=\"shadow-lg hover:shadow-xl hover:scale-[1.02] transition-all duration-300 ease-in-out\">\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"font-headline text-xl\">Average Quote Value Trend</CardTitle>\n                <TrendingUp className=\"h-6 w-6 text-muted-foreground\" />\n              </CardHeader>\n              <CardContent>\n                <CardDescription className=\"mb-4\">\n                  Track average quote value (for 'Approved' or 'Sent' quotes) over time. (Chart: Line chart)\n                </CardDescription>\n                <div className=\"p-4 text-center border-2 border-dashed border-muted-foreground/50 rounded-lg bg-muted/20\">\n                  <h3 className=\"text-md font-semibold text-foreground mb-1\">Analysis Requires New Endpoint</h3>\n                   <p className=\"text-xs text-muted-foreground mb-2\">Requires a new API endpoint to aggregate quote `grandTotal` by `quoteDate`. The AI would need a tool to access this data.</p>\n                  <Card className=\"mt-1 text-left text-xs bg-background/50\">\n                      <CardHeader className=\"p-2\"><CardTitle className=\"text-xs font-semibold flex items-center\"><Brain className=\"h-3 w-3 mr-1 text-primary\" /> AI Prompt Example</CardTitle></CardHeader>\n                      <CardContent className=\"p-2\"><code className=\"block whitespace-pre-wrap\">{`Show the monthly trend of average quote value for quotes in 'Approved' status over the last 6 months. Is the average deal size increasing or decreasing?`}</code></CardContent>\n                  </Card>\n                </div>\n              </CardContent>\n            </Card>\n            <Card className=\"shadow-lg hover:shadow-xl hover:scale-[1.02] transition-all duration-300 ease-in-out\">\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"font-headline text-xl\">Sales Pipeline Value</CardTitle>\n                <CircleDollarSign className=\"h-6 w-6 text-muted-foreground\" />\n              </CardHeader>\n              <CardContent>\n                <CardDescription className=\"mb-4\">\n                  Total value of quotes currently in 'Pending Approval' or 'Sent' status. (Chart: Bar chart by status)\n                </CardDescription>\n                <div className=\"p-4 text-center border-2 border-dashed border-muted-foreground/50 rounded-lg bg-muted/20\">\n                  <h3 className=\"text-md font-semibold text-foreground mb-1\">Analysis Requires New Endpoint</h3>\n                  <p className=\"text-xs text-muted-foreground mb-2\">Requires a new API endpoint to sum `grandTotal` grouped by `status`. The AI would need a new tool to access this data.</p>\n                  <Card className=\"mt-1 text-left text-xs bg-background/50\">\n                      <CardHeader className=\"p-2\"><CardTitle className=\"text-xs font-semibold flex items-center\"><Brain className=\"h-3 w-3 mr-1 text-primary\" /> AI Prompt Example</CardTitle></CardHeader>\n                      <CardContent className=\"p-2\"><code className=\"block whitespace-pre-wrap\">{`What is the total value of our current sales pipeline (sum of 'Pending Approval' and 'Sent to Client' quotes)? Show breakdown by quote status.`}</code></CardContent>\n                  </Card>\n                </div>\n              </CardContent>\n            </Card>\n            <Card className=\"shadow-lg hover:shadow-xl hover:scale-[1.02] transition-all duration-300 ease-in-out\">\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"font-headline text-xl\">Quote Rejection Reasons</CardTitle>\n                <AlertOctagon className=\"h-6 w-6 text-muted-foreground\" />\n              </CardHeader>\n              <CardContent>\n                <CardDescription className=\"mb-4\">\n                  Analysis of common reasons for 'Rejected' quotes. (Chart: Pie/Bar chart for reasons)\n                </CardDescription>\n                <div className=\"p-4 text-center border-2 border-dashed border-muted-foreground/50 rounded-lg bg-muted/20\">\n                  <h3 className=\"text-md font-semibold text-foreground mb-1\">Analysis Requires More Data</h3>\n                  <p className=\"text-xs text-muted-foreground mb-2\">Requires a dedicated `rejectionReason` field in the database or advanced AI text analysis on the quote `notes` field.</p>\n                  <Card className=\"mt-1 text-left text-xs bg-background/50\">\n                      <CardHeader className=\"p-2\"><CardTitle className=\"text-xs font-semibold flex items-center\"><Brain className=\"h-3 w-3 mr-1 text-primary\" /> AI Prompt Example</CardTitle></CardHeader>\n                      <CardContent className=\"p-2\"><code className=\"block whitespace-pre-wrap\">{`For all quotes marked 'Rejected' in the last year, what are the top 3 reasons for rejection? (Assuming rejection reason is stored in notes or a dedicated field)`}</code></CardContent>\n                  </Card>\n                </div>\n              </CardContent>\n            </Card>\n          </section>\n        </TabsContent>\n\n        <TabsContent value=\"requisition-analytics\">\n          <section className=\"grid gap-6 lg:grid-cols-1 xl:grid-cols-2\">\n            <Card className=\"shadow-lg hover:shadow-xl hover:scale-[1.02] transition-all duration-300 ease-in-out\">\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"font-headline text-xl\">Requisition Processing Time</CardTitle>\n                <Hourglass className=\"h-6 w-6 text-muted-foreground\" />\n              </CardHeader>\n              <CardContent>\n                <CardDescription className=\"mb-4\">\n                  Average time from requisition submission to approval, and from approval to PO creation. (Chart: Histogram/Box Plot)\n                </CardDescription>\n                 <div className=\"p-4 text-center border-2 border-dashed border-muted-foreground/50 rounded-lg bg-muted/20\">\n                  <h3 className=\"text-md font-semibold text-foreground mb-1\">Coming Soon!</h3>\n                  <Card className=\"mt-1 text-left text-xs bg-background/50\">\n                      <CardHeader className=\"p-2\"><CardTitle className=\"text-xs font-semibold flex items-center\"><Brain className=\"h-3 w-3 mr-1 text-primary\" /> AI Prompt Example</CardTitle></CardHeader>\n                      <CardContent className=\"p-2\"><code className=\"block whitespace-pre-wrap\">{`Calculate the average cycle time for requisitions: 1. Submission to Approval. 2. Approval to PO Creation (if PO exists). Identify requisitions that took more than 7 days for approval.`}</code></CardContent>\n                  </Card>\n                </div>\n              </CardContent>\n            </Card>\n            <Card className=\"shadow-lg hover:shadow-xl hover:scale-[1.02] transition-all duration-300 ease-in-out\">\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"font-headline text-xl\">Spend by Site/Department (Requisitions)</CardTitle>\n                <Users className=\"h-6 w-6 text-muted-foreground\" />\n              </CardHeader>\n              <CardContent>\n                <CardDescription className=\"mb-4\">\n                  Track estimated spend from approved requisitions by originating site/department. (Chart: Bar chart/Treemap)\n                </CardDescription>\n                 <div className=\"p-4 text-center border-2 border-dashed border-muted-foreground/50 rounded-lg bg-muted/20\">\n                  <h3 className=\"text-md font-semibold text-foreground mb-1\">Coming Soon!</h3>\n                  <Card className=\"mt-1 text-left text-xs bg-background/50\">\n                      <CardHeader className=\"p-2\"><CardTitle className=\"text-xs font-semibold flex items-center\"><Brain className=\"h-3 w-3 mr-1 text-primary\" /> AI Prompt Example</CardTitle></CardHeader>\n                      <CardContent className=\"p-2\"><code className=\"block whitespace-pre-wrap\">{`Show the total estimated value of approved requisitions for each site in the last month. Which site has the highest requested spend?`}</code></CardContent>\n                  </Card>\n                </div>\n              </CardContent>\n            </Card>\n            <Card className=\"shadow-lg hover:shadow-xl hover:scale-[1.02] transition-all duration-300 ease-in-out\">\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"font-headline text-xl\">Requisition to PO Conversion Rate</CardTitle>\n                <Percent className=\"h-6 w-6 text-muted-foreground\" />\n              </CardHeader>\n              <CardContent>\n                <CardDescription className=\"mb-4\">\n                  Percentage of approved requisitions that resulted in a Purchase Order. (Chart: Percentage Gauge/Bar)\n                </CardDescription>\n                 <div className=\"p-4 text-center border-2 border-dashed border-muted-foreground/50 rounded-lg bg-muted/20\">\n                  <h3 className=\"text-md font-semibold text-foreground mb-1\">Coming Soon!</h3>\n                  <Card className=\"mt-1 text-left text-xs bg-background/50\">\n                      <CardHeader className=\"p-2\"><CardTitle className=\"text-xs font-semibold flex items-center\"><Brain className=\"h-3 w-3 mr-1 text-primary\" /> AI Prompt Example</CardTitle></CardHeader>\n                      <CardContent className=\"p-2\"><code className=\"block whitespace-pre-wrap\">{`What percentage of 'Approved' requisitions created last quarter were converted to a PO (status 'Closed')? What percentage were 'Cancelled' after approval?`}</code></CardContent>\n                  </Card>\n                </div>\n              </CardContent>\n            </Card>\n            <Card className=\"shadow-lg hover:shadow-xl hover:scale-[1.02] transition-all duration-300 ease-in-out\">\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"font-headline text-xl\">Frequently Requested Items/Categories</CardTitle>\n                <BarChartHorizontalBig className=\"h-6 w-6 text-muted-foreground\" />\n              </CardHeader>\n              <CardContent>\n                <CardDescription className=\"mb-4\">\n                  Identify items or categories most commonly requested via requisitions. (Chart: Bar chart by count or value)\n                </CardDescription>\n                 <div className=\"p-4 text-center border-2 border-dashed border-muted-foreground/50 rounded-lg bg-muted/20\">\n                  <h3 className=\"text-md font-semibold text-foreground mb-1\">Coming Soon!</h3>\n                  <Card className=\"mt-1 text-left text-xs bg-background/50\">\n                      <CardHeader className=\"p-2\"><CardTitle className=\"text-xs font-semibold flex items-center\"><Brain className=\"h-3 w-3 mr-1 text-primary\" /> AI Prompt Example</CardTitle></CardHeader>\n                      <CardContent className=\"p-2\"><code className=\"block whitespace-pre-wrap\">{`List the top 10 most frequently requested item categories from requisitions this year. Are there any items that are frequently requested across multiple sites?`}</code></CardContent>\n                  </Card>\n                </div>\n              </CardContent>\n            </Card>\n          </section>\n        </TabsContent>\n        \n        <TabsContent value=\"fuel-analytics\">\n          <section className=\"grid gap-6 lg:grid-cols-1 xl:grid-cols-2\">\n            <FuelCostByTagChart key={`fuel-cost-by-tag-${refreshKey}`} filters={currentFilters} />\n            <Card className=\"shadow-lg hover:shadow-xl hover:scale-[1.02] transition-all duration-300 ease-in-out\">\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"font-headline text-xl\">Fuel Consumption Efficiency</CardTitle>\n                <TrendingUp className=\"h-6 w-6 text-muted-foreground\" />\n              </CardHeader>\n              <CardContent>\n                <CardDescription className=\"mb-4\">\n                  Liters/100km for vehicles, Liters/hour for equipment (if hour meter data available). (Chart: Line chart per asset/Bar chart comparison)\n                </CardDescription>\n                <div className=\"p-4 text-center border-2 border-dashed border-muted-foreground/50 rounded-lg bg-muted/20\">\n                  <h3 className=\"text-md font-semibold text-foreground mb-1\">Coming Soon!</h3>\n                  <Card className=\"mt-1 text-left text-xs bg-background/50\">\n                      <CardHeader className=\"p-2\"><CardTitle className=\"text-xs font-semibold flex items-center\"><Brain className=\"h-3 w-3 mr-1 text-primary\" /> AI Prompt Example</CardTitle></CardHeader>\n                      <CardContent className=\"p-2\"><code className=\"block whitespace-pre-wrap\">{`For vehicle [Tag Number], calculate its average fuel efficiency (L/100km) for the last month based on fuel records and odometer readings. Compare this to its average from the previous month.`}</code></CardContent>\n                  </Card>\n                </div>\n              </CardContent>\n            </Card>\n            <Card className=\"shadow-lg hover:shadow-xl hover:scale-[1.02] transition-all duration-300 ease-in-out\">\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"font-headline text-xl\">Fuel Price Trend Analysis</CardTitle>\n                <LineChart className=\"h-6 w-6 text-muted-foreground\" />\n              </CardHeader>\n              <CardContent>\n                <CardDescription className=\"mb-4\">\n                  Track average fuel price (Unit Cost) paid over time, potentially filterable by site or fuel type. (Chart: Line chart)\n                </CardDescription>\n                 <div className=\"p-4 text-center border-2 border-dashed border-muted-foreground/50 rounded-lg bg-muted/20\">\n                  <h3 className=\"text-md font-semibold text-foreground mb-1\">Coming Soon!</h3>\n                  <Card className=\"mt-1 text-left text-xs bg-background/50\">\n                      <CardHeader className=\"p-2\"><CardTitle className=\"text-xs font-semibold flex items-center\"><Brain className=\"h-3 w-3 mr-1 text-primary\" /> AI Prompt Example</CardTitle></CardHeader>\n                      <CardContent className=\"p-2\"><code className=\"block whitespace-pre-wrap\">{`Plot the average unit cost of diesel purchased across all sites for each month of the last year. Are there any significant price fluctuations?`}</code></CardContent>\n                  </Card>\n                </div>\n              </CardContent>\n            </Card>\n            <Card className=\"shadow-lg hover:shadow-xl hover:scale-[1.02] transition-all duration-300 ease-in-out\">\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"font-headline text-xl\">Anomalous Fuel Consumption</CardTitle>\n                <AlertTriangleIcon className=\"h-6 w-6 text-muted-foreground\" />\n              </CardHeader>\n              <CardContent>\n                <CardDescription className=\"mb-4\">\n                  Identify tags with sudden significant increases in fuel consumption or unusually high consumption compared to similar tags. (Requires historical data and comparison logic)\n                </CardDescription>\n                 <div className=\"p-4 text-center border-2 border-dashed border-muted-foreground/50 rounded-lg bg-muted/20\">\n                  <h3 className=\"text-md font-semibold text-foreground mb-1\">Coming Soon!</h3>\n                  <Card className=\"mt-1 text-left text-xs bg-background/50\">\n                      <CardHeader className=\"p-2\"><CardTitle className=\"text-xs font-semibold flex items-center\"><Brain className=\"h-3 w-3 mr-1 text-primary\" /> AI Prompt Example</CardTitle></CardHeader>\n                      <CardContent className=\"p-2\"><code className=\"block whitespace-pre-wrap\">{`Compare the fuel efficiency of all 'LDV' type tags for the last month. Flag any tags whose efficiency is more than 20% worse than the average for LDVs or significantly worse than their own historical average.`}</code></CardContent>\n                  </Card>\n                </div>\n              </CardContent>\n            </Card>\n          </section>\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}