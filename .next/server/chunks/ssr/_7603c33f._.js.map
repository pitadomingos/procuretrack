{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 42, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 123, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/todo-progress/page.tsx"],"sourcesContent":["\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from \"@/components/ui/card\";\nimport { \n  CheckCircle, \n  ListChecks, \n  Zap, \n  DatabaseZap, \n  Users, \n  FileSignature, \n  Fuel, \n  LayoutList, \n  Palette, \n  Settings2, \n  ShieldCheck, \n  BrainCircuit,\n  LayoutDashboard,\n  Settings,\n  BarChart3,\n  FileText,\n  BookUser,\n  FileCode2,\n  ClipboardCheck,\n  Printer, \n  UserCheck as UserCheckIcon, // Aliased to avoid conflict\n  ServerCog, \n  Edit3, \n  ClipboardList as ClipboardListIcon, // Aliased\n  Building,\n  UploadCloud,\n  Table2,\n  Truck,\n  Package as PackageIcon, // Aliased\n  Briefcase,\n  Tag as TagIcon, // Aliased\n  MessageCircleQuestion,\n  ArrowRightLeft,\n  Layers,\n  Wrench,\n  Network,\n  Smartphone,\n  Globe,\n  DollarSign,\n  ShieldAlert,\n  History\n} from \"lucide-react\";\n\nexport default function TodoProgressPage() {\n  const completedTasks = [\n    { \n      category: \"Core Setup & Styling\",\n      tasks: [\n        { icon: Settings2, text: \"Initialized Next.js 15 (App Router) project with TypeScript.\" },\n        { icon: Palette, text: \"Integrated ShadCN UI components and Tailwind CSS for styling.\" },\n        { icon: Palette, text: \"Established a custom theme using HSL CSS variables in `globals.css` for consistent light/dark modes.\" },\n        { icon: Palette, text: \"Implemented Light/Dark mode theme toggle functionality in the header.\" },\n      ]\n    },\n    {\n      category: \"Application Layout & Navigation\",\n      tasks: [\n        { icon: LayoutList, text: \"Developed core application layout: Collapsible Sidebar, Header, and main content area.\" },\n        { icon: LayoutList, text: \"Implemented dynamic page titles and breadcrumb navigation in the Header.\" },\n        { icon: UserCheckIcon, text: \"Added user avatar display and mock user dropdown in the Header.\" },\n        { icon: Palette, text: \"Included a star rating system on most pages for user feedback (mocked interaction).\" },\n      ]\n    },\n    {\n      category: \"Dashboard Module\",\n      tasks: [\n        { icon: LayoutDashboard, text: \"Created Dashboard page (`src/app/page.tsx`) as the main overview.\" },\n        { icon: LayoutDashboard, text: \"Implemented dynamic grouped stat cards for key metrics (Users, POs, GRN Activity, Requisitions, Fuel, Quotes) fetching data via `/api/dashboard-stats`.\" },\n        { icon: Settings2, text: \"Integrated FilterBar for Month/Year filtering on dashboard charts.\" },\n        { icon: BarChart3, text: \"Developed interactive charts: Monthly PO Status, Site PO Value Status, Requisitions by Status, Quotes by Status, all fetching live data from respective `/api/charts/*` endpoints.\" },\n        { icon: ListChecks, text: \"Added a Recent Activity Log table, fetching limited entries from `/api/activity-log`.\" },\n      ]\n    },\n    {\n      category: \"Document Creation & Management (`/create-document`)\",\n      tasks: [\n        { icon: LayoutList, text: \"Built a tabbed interface for POs, GRNs, Quotes, Requisitions, and Fuel Records.\" },\n        { icon: FileSignature, text: \"Purchase Orders (PO): Comprehensive `POForm` for creation & editing; loading items from approved Requisitions (header site ID from Req applied to PO items); unique PO Number generation; CRUD APIs; `PrintablePO` component & Playwright PDF generation; PO List View with actions.\" },\n        { icon: FileSignature, text: \"Client Quotations: `QuoteForm` for creation & editing; unique Quote Number generation; CRUD APIs; `PrintableQuote` component; Quote List View with actions; CSV Upload for quotes.\" },\n        { icon: ClipboardListIcon, text: \"Purchase Requisitions: `RequisitionForm` for creation & editing; unique Requisition Number generation; CRUD APIs; `PrintableRequisition` component; Requisition List View with actions.\" },\n        { icon: Truck, text: \"Goods Received Notes (GRN): `GRNInterface` UI for PO selection and item quantity input; Backend API (`/api/grn`) for processing GRN submissions (updates POItem quantities and PO status); `PrintableGRN` component.\" },\n        { icon: Fuel, text: \"Fuel Records: `FuelRecordForm` UI; Fuel Record List View with distance calculation (currently mock data backed, API exists).\" },\n      ]\n    },\n    {\n      category: \"Approvals Workflow\",\n      tasks: [\n        { icon: UserCheckIcon, text: \"Consolidated 'My Approvals' page (`/approvals`) for POs, Quotes, and Requisitions.\" },\n        { icon: ServerCog, text: \"Backend APIs to fetch pending items for a (mock) logged-in approver.\" },\n        { icon: Settings2, text: \"Implemented approve/reject functionality with API calls for each document type.\" },\n        { icon: Edit3, text: \"Developed `RejectDocumentModal` for standardized rejection handling.\" },\n        { icon: Edit3, text: \"Created `ReviewPOModal` for item-specific feedback on POs (simulated email notification).\" },\n      ]\n    },\n    {\n      category: \"Data Management (Admin Section)\",\n      tasks: [\n        { icon: Settings, text: \"Management hub page (`/management`) with dynamic entity counts and navigation cards.\" },\n        { icon: PackageIcon, text: \"Suppliers: Full CRUD functionality with `SupplierForm` and API integration.\" },\n        { icon: Users, text: \"Approvers: Full CRUD functionality with `ApproverForm` and API integration.\" },\n        { icon: Users, text: \"Users: Full CRUD functionality with `UserForm` and API integration (site access display only).\" },\n        { icon: Building, text: \"Sites: Full CRUD functionality with `SiteForm` and API integration.\" },\n        { icon: Briefcase, text: \"Allocations: Legacy read-only page with mock data.\" },\n        { icon: TagIcon, text: \"Categories: Full CRUD functionality with `CategoryForm` and API integration.\" },\n        { icon: Fuel, text: \"Tags (Vehicles/Equipment): Full CRUD functionality with `TagForm` and API integration.\" },\n        { icon: Briefcase, text: \"Clients: Full CRUD functionality with `ClientForm` and API integration.\" },\n        { icon: UploadCloud, text: \"CSV Data Upload: Implemented for Clients, Tags, and Suppliers, including downloadable templates.\" },\n      ]\n    },\n    {\n      category: \"Supporting Pages & Features\",\n      tasks: [\n        { icon: ListChecks, text: \"`ActivityLogPage` (`/activity-log`): Detailed view with filtering, fetching from `/api/activity-log`.\" },\n        { icon: BarChart3, text: \"`AnalyticsPage` (`/analytics`): Initial charts and placeholders for future detailed analytics.\" },\n        { icon: FileText, text: \"`ReportsPage` (`/reports`): Basic placeholder structure.\" },\n        { icon: MessageCircleQuestion, text: \"`SurveyPage` (`/survey`): UI for user feedback collection (submission mocked).\" },\n        { icon: BookUser, text: \"`UserManualPage` (`/user-manual`): Comprehensive user guide generated and refined.\" },\n        { icon: FileCode2, text: \"`SystemDocumentationPage` (`/system-documentation`): Technical overview of the application.\" },\n        { icon: ClipboardCheck, text: \"`TodoProgressPage` (this page): Tracking development milestones.\" },\n      ]\n    },\n    {\n      category: \"Backend & Database\",\n      tasks: [\n        { icon: DatabaseZap, text: \"Established MySQL database schema with creation and alteration scripts in `/scripts`.\" },\n        { icon: ServerCog, text: \"Developed Node.js backend using Next.js API Routes.\" },\n        { icon: DatabaseZap, text: \"Configured database connection pool in `backend/db.js`.\" },\n        { icon: ServerCog, text: \"Built comprehensive API endpoints for CRUD operations, chart data, document number generation, and specific actions (approve/reject).\" },\n        { icon: Printer, text: \"Implemented server-side PDF generation for Purchase Orders using Playwright.\" },\n      ]\n    },\n    {\n      category: \"User Experience & Error Handling\",\n      tasks: [\n        { icon: Zap, text: \"Integrated toast notifications for user feedback on operations.\" },\n        { icon: ShieldAlert, text: \"Implemented loading states and error messages for data-fetching components.\" },\n      ]\n    }\n  ];\n\n  const upcomingTasks = [\n    { \n      category: \"User Authentication & Authorization\",\n      tasks: [\n        { icon: ShieldCheck, text: \"Implement robust user login system (e.g., Firebase Authentication, NextAuth.js).\" },\n        { icon: Users, text: \"Develop Role-Based Access Control (RBAC) for all features and data (Admin, Creator, Approver, Manager, Viewer).\" },\n        { icon: Settings2, text: \"Create User Profile page for password changes, preferences, and notification settings.\" },\n      ]\n    },\n    {\n      category: \"Notifications & Communication\",\n      tasks: [\n        { icon: Zap, text: \"Develop real-time in-app notifications for critical events.\" },\n        { icon: Zap, text: \"Implement email notifications for approval requests, rejections, comments, and GRN processing.\" },\n      ]\n    },\n    {\n      category: \"Data Management & Import/Export\",\n      tasks: [\n        { icon: UploadCloud, text: \"Expand CSV/Excel import/export capabilities to all major entities (POs, Requisitions, Fuel Records) with robust validation, error reporting, and preview features.\" },\n        { icon: Table2, text: \"Implement batch update and delete functionalities in all management tables.\" },\n      ]\n    },\n    {\n      category: \"GRN Module Enhancements\",\n      tasks: [\n        { icon: History, text: \"Develop GRN document history, search, and detailed view functionalities.\" },\n        { icon: ArrowRightLeft, text: \"Implement systematic handling of discrepancies (short/over-shipments) and returns to supplier.\" },\n        { icon: Layers, text: \"Integrate GRN processing with a potential inventory module for stock updates.\" },\n      ]\n    },\n    {\n      category: \"Fuel Management Enhancements\",\n      tasks: [\n        { icon: DatabaseZap, text: \"Complete full backend CRUD operations for Fuel Records, moving beyond mock data.\" },\n        { icon: BarChart3, text: \"Implement fuel efficiency calculations (e.g., L/100km, L/hr) based on odometer/hour meter readings.\" },\n        { icon: ShieldAlert, text: \"Develop alerts for abnormal fuel consumption patterns.\" },\n      ]\n    },\n    {\n      category: \"Reporting & Analytics\",\n      tasks: [\n        { icon: BarChart3, text: \"Fully implement the 'Coming Soon' analytics tabs (GRN, Quote, Requisition, Fuel detailed views).\" },\n        { icon: Settings2, text: \"Create a customizable report builder for users to generate ad-hoc reports.\" },\n        { icon: FileText, text: \"Enable scheduled report generation and email delivery.\" },\n      ]\n    },\n    {\n      category: \"AI Integration (Genkit)\",\n      tasks: [\n        { icon: BrainCircuit, text: \"Explore AI-assisted data entry (e.g., extracting data from uploaded invoices/quotes to pre-fill forms).\" },\n        { icon: BrainCircuit, text: \"Implement smart search or natural language querying for data retrieval.\" },\n        { icon: BrainCircuit, text: \"Develop predictive analytics (e.g., forecasting spend, identifying potential delays).\" },\n        { icon: BrainCircuit, text: \"Add automated summary generation for complex documents or reports.\" },\n      ]\n    },\n    {\n      category: \"Inventory Management Module (Optional Extension)\",\n      tasks: [\n        { icon: Layers, text: \"Design and implement features to track stock levels and manage stock movements.\" },\n        { icon: Zap, text: \"Link inventory with procurement for automated reordering based on thresholds.\" },\n        { icon: DollarSign, text: \"Add stock valuation methods and reporting.\" },\n      ]\n    },\n    {\n      category: \"Budgeting & Cost Control\",\n      tasks: [\n        { icon: DollarSign, text: \"Allow definition of budgets per site, department, or project.\" },\n        { icon: BarChart3, text: \"Implement real-time tracking of actual spend against defined budgets.\" },\n        { icon: ShieldAlert, text: \"Configure alerts for budget overruns or near-thresholds.\" },\n      ]\n    },\n    {\n      category: \"Workflow & Process Customization\",\n      tasks: [\n        { icon: Wrench, text: \"Enable administrators to define custom approval workflows (e.g., multi-step, conditional routing).\" },\n      ]\n    },\n    {\n      category: \"Accessibility & User Experience\",\n      tasks: [\n        { icon: Smartphone, text: \"Thoroughly optimize all views and interactions for mobile devices.\" },\n        { icon: Smartphone, text: \"Explore Progressive Web App (PWA) capabilities for offline access and enhanced mobile experience.\" },\n        { icon: Globe, text: \"Implement internationalization (i18n) to support multiple languages (e.g., Portuguese, English).\" },\n      ]\n    },\n    {\n      category: \"Integrations\",\n      tasks: [\n        { icon: Network, text: \"Develop API integrations to sync procurement data with common accounting software (e.g., QuickBooks, Xero).\" },\n        { icon: Users, text: \"Consider a dedicated supplier portal for PO viewing, invoice submission, and information updates.\" },\n      ]\n    },\n    {\n      category: \"Performance & Scalability\",\n      tasks: [\n        { icon: DatabaseZap, text: \"Conduct regular database query optimization and indexing reviews.\" },\n        { icon: ServerCog, text: \"Monitor and improve API response times under load.\" },\n        { icon: LayoutDashboard, text: \"Enhance frontend rendering performance, especially for large data lists (e.g., virtualization).\" },\n        { icon: Settings2, text: \"Perform load testing and define scaling strategies for database and application servers.\" },\n      ]\n    },\n    {\n      category: \"Security & Auditing\",\n      tasks: [\n        { icon: ShieldCheck, text: \"Conduct regular security audits and penetration testing.\" },\n        { icon: ShieldCheck, text: \"Implement Content Security Policy (CSP) and other web security best practices.\" },\n        { icon: History, text: \"Enhance activity logging for more granular tracking of all data changes and system events.\" },\n        { icon: ListChecks, text: \"Develop a dedicated audit trail search and reporting interface.\" },\n      ]\n    },\n    {\n      category: \"Survey & Feedback Module\",\n      tasks: [\n        { icon: DatabaseZap, text: \"Implement backend storage and analysis tools for survey responses.\" },\n        { icon: MessageCircleQuestion, text: \"Enable conditional survey pop-ups based on user activity or specific application events.\" },\n      ]\n    },\n    {\n      category: \"Testing & Quality Assurance\",\n      tasks: [\n        { icon: ClipboardCheck, text: \"Establish comprehensive automated testing: unit tests, integration tests, and end-to-end tests.\" },\n      ]\n    }\n  ];\n\n  return (\n    <div className=\"space-y-6\">\n      <Card className=\"shadow-lg hover:shadow-xl hover:scale-[1.01] transition-all duration-300 ease-in-out\">\n        <CardHeader>\n          <div className=\"flex items-center space-x-3\">\n            <ClipboardCheck className=\"h-8 w-8 text-primary\" />\n            <div>\n              <CardTitle className=\"font-headline text-2xl\">Application To-Do List & Progress</CardTitle>\n              <CardDescription>\n                Tracking our journey in building the ProcureTrack application.\n              </CardDescription>\n            </div>\n          </div>\n        </CardHeader>\n        <CardContent className=\"space-y-8\">\n          {completedTasks.map((categoryItem, catIndex) => (\n            <section key={`completed-cat-${catIndex}`}>\n              <h2 className=\"text-xl font-semibold mb-3 flex items-center\">\n                <CheckCircle className=\"h-6 w-6 mr-2 text-green-500\" />\n                {categoryItem.category}\n              </h2>\n              <ul className=\"list-none space-y-2 pl-0\">\n                {categoryItem.tasks.map((task, taskIndex) => (\n                  <li key={`completed-task-${catIndex}-${taskIndex}`} className=\"flex items-start p-2 rounded-md hover:bg-muted/50 transition-colors\">\n                    <task.icon className=\"h-5 w-5 mr-3 mt-1 text-primary flex-shrink-0\" />\n                    <span className=\"text-muted-foreground text-sm\">{task.text}</span>\n                  </li>\n                ))}\n              </ul>\n            </section>\n          ))}\n\n          <Separator className=\"my-8\" />\n\n          {upcomingTasks.map((categoryItem, catIndex) => (\n             <section key={`upcoming-cat-${catIndex}`}>\n              <h2 className=\"text-xl font-semibold mb-3 flex items-center\">\n                <ListChecks className=\"h-6 w-6 mr-2 text-accent\" />\n                Future Enhancements: {categoryItem.category}\n              </h2>\n              <ul className=\"list-none space-y-2 pl-0\">\n                {categoryItem.tasks.map((task, taskIndex) => (\n                  <li key={`upcoming-task-${catIndex}-${taskIndex}`} className=\"flex items-start p-2 rounded-md hover:bg-muted/50 transition-colors\">\n                    <task.icon className=\"h-5 w-5 mr-3 mt-1 text-primary flex-shrink-0\" />\n                    <span className=\"text-muted-foreground text-sm\">{task.text}</span>\n                  </li>\n                ))}\n              </ul>\n            </section>\n          ))}\n          \n          <section>\n            <p className=\"text-sm text-muted-foreground italic mt-8\">\n              <strong>Note on Time Estimates:</strong> This list tracks feature development. Precise time estimates for software tasks are complex and depend on various factors. This page focuses on outlining completed and planned features.\n            </p>\n          </section>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}